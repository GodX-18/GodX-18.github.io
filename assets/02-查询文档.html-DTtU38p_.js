import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,b as n,e as s,d as p,a}from"./app-oXp7PBbS.js";const r={},i=a(`<h2 id="基本查询" tabindex="-1"><a class="header-anchor" href="#基本查询"><span>基本查询</span></a></h2><p>读取操作从集合中检索文档；即查询集合中的文档。 MongoDB提供了以下方法来从集合中读取文档：</p><ul><li><p>db.collection.find(query, projection)</p><ul><li><p>query ：可选，使用查询操作符指定查询条件</p></li><li><p>projection ：可选，使用投影操作符指定返回的键。查询时返回文档中所有键值,只需省略该参数即可（默认省略）。</p></li></ul></li><li><p>db.collection.findOne()</p></li></ul><h3 id="查询所有文档" tabindex="-1"><a class="header-anchor" href="#查询所有文档"><span>查询所有文档</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等价于 SQL 中的 <code>SELECT * FROM inventory</code> 语句。</p><p>格式化打印结果：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>myCollection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pretty</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="指定返回的文档字段" tabindex="-1"><a class="header-anchor" href="#指定返回的文档字段"><span>指定返回的文档字段</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="精准查询" tabindex="-1"><a class="header-anchor" href="#精准查询"><span>精准查询</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;D&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等价于 SQL 中的 <code>SELECT * FROM inventory WHERE status = &quot;D&quot;</code> 语句。</p><h3 id="指定-and-条件-且" tabindex="-1"><a class="header-anchor" href="#指定-and-条件-且"><span>指定 AND 条件(且)</span></a></h3><p>以下示例检索状态为“ A”且数量小于（$ lt）30的清单集合中的所有文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该操作对应于以下SQL语句：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> inventory <span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span> <span class="token operator">AND</span> qty <span class="token operator">&lt;</span> <span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="指定-or-条件-或" tabindex="-1"><a class="header-anchor" href="#指定-or-条件-或"><span>指定 OR 条件(或)</span></a></h3><p>使用 <code>$or</code> 运算符，您可以指定一个复合查询，该查询将每个子句与一个逻辑或连接相连接，以便该查询选择集合中至少匹配一个条件的文档。</p><p>下面的示例检索状态为 <code>A</code> 或数量小于 <code>$lt30</code> 的集合中的所有文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">$or</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该操作对应于以下 SQL 语句：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> inventory <span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span> <span class="token operator">OR</span> qty <span class="token operator">&lt;</span> <span class="token number">30</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="指定-and-和-or-条件" tabindex="-1"><a class="header-anchor" href="#指定-and-和-or-条件"><span>指定 AND 和 OR 条件</span></a></h3><p>在下面的示例中，复合查询文档选择状态为“ A”且qty小于（$ lt）30或item以字符p开头的所有文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">$or</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^p</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该操作对应于以下SQL语句：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> inventory <span class="token keyword">WHERE</span> <span class="token keyword">status</span> <span class="token operator">=</span> <span class="token string">&quot;A&quot;</span> <span class="token operator">AND</span> <span class="token punctuation">(</span> qty <span class="token operator">&lt;</span> <span class="token number">30</span> <span class="token operator">OR</span> item <span class="token operator">LIKE</span> <span class="token string">&quot;p%&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,29),u={href:"https://www.mongodb.com/docs/manual/reference/operator/query/%E3%80%82",target:"_blank",rel:"noopener noreferrer"},d=n("h3",{id:"查询运算符",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#查询运算符"},[n("span",null,"查询运算符")])],-1),k={href:"https://www.mongodb.com/docs/manual/reference/operator/query/#query-selectors",target:"_blank",rel:"noopener noreferrer"},v=a(`<p>比较运算符：</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td><code>$eq</code></td><td>匹配等于指定值的值。</td></tr><tr><td><code>$gt</code></td><td>匹配大于指定值的值。</td></tr><tr><td><code>$gte</code></td><td>匹配大于或等于指定值的值。</td></tr><tr><td><code>$in</code></td><td>匹配数组中指定的任何值。</td></tr><tr><td><code>$lt</code></td><td>匹配小于指定值的值。</td></tr><tr><td><code>$lte</code></td><td>匹配小于或等于指定值的值。</td></tr><tr><td><code>$ne</code></td><td>匹配所有不等于指定值的值。</td></tr><tr><td><code>$nin</code></td><td>不匹配数组中指定的任何值。</td></tr></tbody></table><p>逻辑运算符：</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td><code>$and</code></td><td>将查询子句与逻辑连接，并返回与这两个子句条件匹配的所有文档。</td></tr><tr><td><code>$not</code></td><td>反转查询表达式的效果，并返回与查询表达式不匹配的文档。</td></tr><tr><td><code>$nor</code></td><td>用逻辑NOR连接查询子句，返回所有不能匹配这两个子句的文档。</td></tr><tr><td><code>$or</code></td><td>用逻辑连接查询子句，或返回与任一子句条件匹配的所有文档。</td></tr></tbody></table><h3 id="查询嵌套文档" tabindex="-1"><a class="header-anchor" href="#查询嵌套文档"><span>查询嵌套文档</span></a></h3><h4 id="匹配嵌套文档" tabindex="-1"><a class="header-anchor" href="#匹配嵌套文档"><span>匹配嵌套文档</span></a></h4><p>要在作为嵌入/嵌套文档的字段上指定相等条件，请使用查询过滤器文档 <code>{&lt;field&gt;: &lt;value&gt;}</code>，其中 <code>&lt;value&gt;</code> 是要匹配的文档。</p><p>例如，以下查询选择字段大小等于文档 <code>{h: 14, w: 21, uom: &quot;cm&quot;}</code> 的所有文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token literal-property property">uom</span><span class="token operator">:</span> <span class="token string">&quot;cm&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整个嵌入式文档上的相等匹配要求与指定的 <code>&lt;value&gt;</code> 文档完全匹配，包括字段顺序。例如，以下查询与库存收集中的任何文档都不匹配：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">w</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token literal-property property">h</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token literal-property property">uom</span><span class="token operator">:</span> <span class="token string">&quot;cm&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询嵌套字段" tabindex="-1"><a class="header-anchor" href="#查询嵌套字段"><span>查询嵌套字段</span></a></h3><p>要在嵌入式/嵌套文档中的字段上指定查询条件，请使用点符号 <code>(&quot;field.nestedField&quot;)</code>。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>使用点符号查询时，字段和嵌套字段必须在引号内。</p></div><h4 id="在嵌套字段上指定相等匹配" tabindex="-1"><a class="header-anchor" href="#在嵌套字段上指定相等匹配"><span>在嵌套字段上指定相等匹配</span></a></h4><p>以下示例选择嵌套在 size 字段中的 uom 字段等于 <code>&quot;in&quot;</code> 的所有文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;size.uom&quot;</span><span class="token operator">:</span> <span class="token string">&quot;in&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用查询运算符指定匹配项" tabindex="-1"><a class="header-anchor" href="#使用查询运算符指定匹配项"><span>使用查询运算符指定匹配项</span></a></h4><p>查询过滤器文档可以使用查询运算符以以下形式指定条件：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token operator">&lt;</span>field1<span class="token operator">&gt;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>operator1<span class="token operator">&gt;</span><span class="token operator">:</span> <span class="token operator">&lt;</span>value1<span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token operator">...</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下查询在 <code>size</code> 字段中嵌入的字段 <code>h</code> 上使用小于运算符 <code>$lt</code></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;size.h&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">15</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="指定-and-条件" tabindex="-1"><a class="header-anchor" href="#指定-and-条件"><span>指定 AND 条件</span></a></h4><p>以下查询选择嵌套字段 <code>h</code> 小于 15，嵌套字段 <code>uom</code> 等于 <code>&quot;in&quot;</code>，状态字段等于 <code>&quot;D&quot;</code> 的所有文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;size.h&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">15</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;size.uom&quot;</span><span class="token operator">:</span> <span class="token string">&quot;in&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;D&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询数组" tabindex="-1"><a class="header-anchor" href="#查询数组"><span>查询数组</span></a></h2><p>练习之前，先插入测试数据：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;journal&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;blank&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">dim_cm</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">21</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;notebook&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blank&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">dim_cm</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">21</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;paper&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blank&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;plain&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">dim_cm</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">21</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;planner&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;blank&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">dim_cm</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">22.85</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;postcard&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token literal-property property">dim_cm</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15.25</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="匹配一个数组" tabindex="-1"><a class="header-anchor" href="#匹配一个数组"><span>匹配一个数组</span></a></h3><p>要在数组上指定相等条件，请使用查询文档 <code>{&lt;field&gt;: &lt;value&gt;}</code>，其中 <code>&lt;value&gt;</code> 是要匹配的精确数组，包括元素的顺序。</p><p>下面的示例查询所有文档，其中字段标签值是按指定顺序恰好具有两个元素 <code>&quot;red&quot;</code> 和 <code>&quot;blank&quot;</code> 的数组:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blank&quot;</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相反，如果您希望找到一个同时包含元素 <code>&quot;red&quot;</code> 和 <code>&quot;blank&quot;</code> 的数组，而不考虑顺序或该数组中的其他元素，请使用 <code>$all</code> 运算符：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$all</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blank&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询数组中的元素" tabindex="-1"><a class="header-anchor" href="#查询数组中的元素"><span>查询数组中的元素</span></a></h3><p>要查询数组字段是否包含至少一个具有指定值的元素，请使用过滤器<code> {&lt;field&gt;: &lt;value&gt;}</code>，其中 <code>&lt;value&gt;</code> 是元素值。</p><p>以下示例查询所有文档，其中 <code>tag</code> 是一个包含字符串 <code>&quot;red&quot;</code> 作为其元素之一的数组：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">tags</span><span class="token operator">:</span> <span class="token string">&quot;red&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要在数组字段中的元素上指定条件，请在查询过滤器文档中使用查询运算符：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token operator">&lt;</span>array field<span class="token operator">&gt;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>operator1<span class="token operator">&gt;</span><span class="token operator">:</span> <span class="token operator">&lt;</span>value1<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如，以下操作查询数组 <code>dim_cm</code> 包含至少一个值大于 25 的元素的所有文档。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">dim_cm</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">25</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="为数组元素指定多个条件" tabindex="-1"><a class="header-anchor" href="#为数组元素指定多个条件"><span>为数组元素指定多个条件</span></a></h3><p>在数组元素上指定复合条件时，可以指定查询，以使单个数组元素满足这些条件，或者数组元素的任何组合均满足条件。</p>`,44),m=a(`<li><p>使用数组元素上的复合过滤条件查询数组</p><p>以下示例查询文档，其中 <code>dim_cm</code> 数组包含以某种组合满足查询条件的元素；</p><p>例如，一个元素可以满足大于 15 的条件，而另一个元素可以满足小于 20 的条件；或者单个元素可以满足以下两个条件：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">dim_cm</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,1),y=n("p",null,"查询满足多个条件的数组元素",-1),b={href:"https://docs.mongodb.com/manual/reference/operator/query/elemMatch/#op._S_elemMatch",target:"_blank",rel:"noopener noreferrer"},g=a(`<p>以下示例查询在 <code>dim_cm</code> 数组中包含至少一个同时 大于22 和 小于30 的元素的文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">dim_cm</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$elemMatch</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),h=a(`<li><p>通过数组索引位置查询元素</p><p>使用点符号，可以为数组的特定索引或位置指定元素的查询条件。该数组使用基于零的索引。</p><p>注意：使用点符号查询时，字段和嵌套字段必须在引号内。</p><p>下面的示例查询数组 <code>dim_cm</code> 中第二个元素大于 25 的所有文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;dim_cm.1&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">25</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>通过数组长度查询数组</p><p>使用 <code>$size</code> 运算符可按元素数量查询数组。</p><p>例如，以下选择数组标签具有3个元素的文档:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;tags&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$size</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li>`,2),q=a(`<h2 id="查询嵌入文档的数组" tabindex="-1"><a class="header-anchor" href="#查询嵌入文档的数组"><span>查询嵌入文档的数组</span></a></h2><p>测试数据：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span> <span class="token punctuation">[</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;journal&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">instock</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">15</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;notebook&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">instock</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;paper&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">instock</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">60</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">15</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;planner&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">instock</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">40</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token string">&quot;postcard&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">instock</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">15</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;C&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">35</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查询嵌入在数组中的文档" tabindex="-1"><a class="header-anchor" href="#查询嵌入在数组中的文档"><span>查询嵌入在数组中的文档</span></a></h3><p>以下示例选择库存数组中的元素与指定文档匹配的所有文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;instock&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>整个嵌入式/嵌套文档上的相等匹配要求与指定文档（包括字段顺序）完全匹配。例如，以下查询与库存收集中的任何文档都不匹配：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;instock&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在文档数组中的字段上指定查询条件" tabindex="-1"><a class="header-anchor" href="#在文档数组中的字段上指定查询条件"><span>在文档数组中的字段上指定查询条件</span></a></h3><ol><li><p>在嵌入文档数组中的字段上指定查询条件</p><p>如果您不知道嵌套在数组中的文档的索引位置，请使用点（.）和嵌套文档中的字段名称来连接数组字段的名称。</p><p>下面的示例选择所有库存数组中包含至少一个嵌入式文档的嵌入式文档，这些嵌入式文档包含值小于或等于20的字段qty：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;instock.qty&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lte</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>使用数组索引在嵌入式文档中查询字段</p><p>使用点表示法，您可以为文档中特定索引或数组位置处的字段指定查询条件。该数组使用基于零的索引。</p><p>注意：使用点符号查询时，字段和索引必须在引号内。</p><p>下面的示例选择所有库存文件，其中库存数组的第一个元素是包含值小于或等于20的字段qty的文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;instock.0.qty&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lte</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="为文档数组指定多个条件" tabindex="-1"><a class="header-anchor" href="#为文档数组指定多个条件"><span>为文档数组指定多个条件</span></a></h3><p>在嵌套在文档数组中的多个字段上指定条件时，可以指定查询，以使单个文档满足这些条件，或者数组中文档的任何组合（包括单个文档）都满足条件。</p><ol><li><p>单个嵌套文档在嵌套字段上满足多个查询条件</p><p>使用$ elemMatch运算符可在一组嵌入式文档上指定多个条件，以使至少一个嵌入式文档满足所有指定条件。</p><p>下面的示例查询库存数组中至少有一个嵌入式文档的文档，这些文档同时包含等于5的字段qty和等于A的字段仓库：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;instock&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$elemMatch</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">warehouse</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面的示例查询库存数组中至少有一个嵌入式文档的嵌入式文档包含的字段qty大于10且小于或等于20：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;instock&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$elemMatch</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">qty</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token literal-property property">$lte</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>元素组合满足标准</p><p>如果数组字段上的复合查询条件未使用$ elemMatch运算符，则查询将选择其数组包含满足条件的元素的任意组合的那些文档。</p><p>例如，以下查询匹配文档，其中嵌套在库存数组中的任何文档的qty字段都大于10，而数组中的任何文档（但不一定是同一嵌入式文档）的qty字段小于或等于20：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;instock.qty&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>  <span class="token literal-property property">$lte</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面的示例查询库存数组中具有至少一个包含数量等于5的嵌入式文档和至少一个包含等于A的字段仓库的嵌入式文档（但不一定是同一嵌入式文档）的文档：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;instock.qty&quot;</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;instock.warehouse&quot;</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="指定从查询返回的项目字段" tabindex="-1"><a class="header-anchor" href="#指定从查询返回的项目字段"><span>指定从查询返回的项目字段</span></a></h2><h3 id="返回匹配文档中所有字段" tabindex="-1"><a class="header-anchor" href="#返回匹配文档中所有字段"><span>返回匹配文档中所有字段</span></a></h3><p>下面的示例返回状态为 <code>&quot;A&quot;</code> 的清单集合中所有文档的所有字段：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="仅返回指定字段和-id-字段" tabindex="-1"><a class="header-anchor" href="#仅返回指定字段和-id-字段"><span>仅返回指定字段和 _id 字段</span></a></h3><p>通过将投影文档中的 <code>field</code> \`设置为 1，投影可以显式包含多个字段。以下操作返回与查询匹配的所有文档。在结果集中，在匹配的文档中仅返回项目，状态和默认情况下的 _id 字段。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="禁止-id-字段" tabindex="-1"><a class="header-anchor" href="#禁止-id-字段"><span>禁止 <code>_id</code> 字段</span></a></h3><p>您可以通过将投影中的 <code>_id</code> 字段设置为 <code>0</code> 来从结果中删除 <code>_id</code> 字段，如以下示例所示：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="返回所有但排除的字段" tabindex="-1"><a class="header-anchor" href="#返回所有但排除的字段"><span>返回所有但排除的字段</span></a></h3><p>您可以使用投影排除特定字段，而不用列出要在匹配文档中返回的字段。以下示例返回匹配文档中状态和库存字段以外的所有字段：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">instock</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="返回嵌入式文档中的特定字段" tabindex="-1"><a class="header-anchor" href="#返回嵌入式文档中的特定字段"><span>返回嵌入式文档中的特定字段</span></a></h3><p>您可以返回嵌入式文档中的特定字段。使用点表示法引用嵌入式字段，并在投影文档中将其设置为<code>1</code>。</p><p>以下示例返回：</p><ul><li><code>_id</code> 字段（默认情况下返回）</li><li><code>item</code> 字段</li><li><code>status</code> 字段</li><li><code>size</code> 文档中的 <code>uom</code> 字段</li></ul><p><code>uom</code> 字段仍嵌入在尺寸文档中。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;size.uom&quot;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从MongoDB 4.4 开始，您还可以使用嵌套形式指定嵌入式字段，例如 <code>{item: 1, status: 1, size: {uom: 1}}</code>。</p><h3 id="禁止嵌入文档中的特定字段" tabindex="-1"><a class="header-anchor" href="#禁止嵌入文档中的特定字段"><span>禁止嵌入文档中的特定字段</span></a></h3><p>您可以隐藏嵌入式文档中的特定字段。使用点表示法引用投影文档中的嵌入字段并将其设置为<code>0</code>。</p><p>以下示例指定一个投影，以排除尺寸文档内的 <code>uom</code> 字段。其他所有字段均在匹配的文档中返回：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token string-property property">&quot;size.uom&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>从 MongoDB 4.4 开始，您还可以使用嵌套形式指定嵌入式字段，例如 <code>{ size: { uom: 0 } }</code>。</p></div><h3 id="在数组中的嵌入式文档上投射" tabindex="-1"><a class="header-anchor" href="#在数组中的嵌入式文档上投射"><span>在数组中的嵌入式文档上投射</span></a></h3><p>使用点表示法可将特定字段投影在嵌入数组的文档中。</p><p>以下示例指定要返回的投影：</p><ul><li><code>_id</code> 字段（默认情况下返回）</li><li><code>item</code> 字段</li><li><code>status</code> 字段</li><li><code>qty</code> 数组中嵌入的文档中的 <code>instock</code> 字段</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;instock.qty&quot;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="返回数组中的项目特定数组元素" tabindex="-1"><a class="header-anchor" href="#返回数组中的项目特定数组元素"><span>返回数组中的项目特定数组元素</span></a></h3><p>对于包含数组的字段，MongoDB 提供以下用于操纵数组的投影运算符：<code>$elemMatch</code> 、<code>$slice</code> 和 <code>$</code>。</p><p>下面的示例使用 $slice 投影运算符返回库存数组中的最后一个元素：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">&quot;A&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">instock</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$slice</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>$elemMatch</code>，<code>$slice</code> 和 $ 是投影要包含在返回数组中的特定元素的唯一方法。例如，您不能使用数组索引来投影特定的数组元素。例如{“ instock.0”：1}投影不会投影第一个元素的数组。</p></div><h2 id="查询空字段或缺少字段" tabindex="-1"><a class="header-anchor" href="#查询空字段或缺少字段"><span>查询空字段或缺少字段</span></a></h2><p>MongoDB 中的不同查询运算符对空值的处理方式不同。</p><p>测试数据：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="相等过滤器" tabindex="-1"><a class="header-anchor" href="#相等过滤器"><span>相等过滤器</span></a></h3><p><code>{item: null}</code> 查询将匹配包含其值为 <code>null</code> 的 <code>item</code> 字段或不包含 <code>item</code> 字段的文档。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该查询返回集合中的两个文档。</p><h3 id="类型检查" tabindex="-1"><a class="header-anchor" href="#类型检查"><span>类型检查</span></a></h3><p><code>{ item: { $type: 10 } }</code> 查询仅匹配包含 <code>item</code> 字段，其值为 <code>null</code> 的文档；即 <code>item</code> 字段的值为 BSON 类型为 Null（类型编号10）：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$type</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该查询仅返回 <code>item</code> 字段值为 <code>null</code> 的文档</p><h3 id="存在检查" tabindex="-1"><a class="header-anchor" href="#存在检查"><span>存在检查</span></a></h3><p>以下示例查询不包含字段的文档。</p><p><code>{ { item: { $exists：false }}</code> 查询与不包含 <code>item</code> 字段的文档匹配：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>inventory<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$exists</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该查询仅返回不包含项目字段的文档。</p>`,65);function j(f,x){const t=o("ExternalLinkIcon");return c(),l("div",null,[i,n("p",null,[s("完整的查询运算符参考："),n("a",u,[s("https://www.mongodb.com/docs/manual/reference/operator/query/。"),p(t)])]),d,n("p",null,[n("a",k,[s("官网"),p(t)])]),v,n("ol",null,[m,n("li",null,[y,n("p",null,[s("使用 "),n("a",b,[s("$elemMatch"),p(t)]),s(" 运算符可以在数组的元素上指定多个条件，以使至少一个数组元素满足所有指定的条件。")]),g]),h]),q])}const $=e(r,[["render",j],["__file","02-查询文档.html.vue"]]),E=JSON.parse('{"path":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/Nodejs%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/MongoDB/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/02-%E6%9F%A5%E8%AF%A2%E6%96%87%E6%A1%A3.html","title":"查询文档","lang":"zh-CN","frontmatter":{"title":"查询文档","order":2,"category":["SQL"],"tag":["数据库","noSQL"],"description":"基本查询 读取操作从集合中检索文档；即查询集合中的文档。 MongoDB提供了以下方法来从集合中读取文档： db.collection.find(query, projection) query ：可选，使用查询操作符指定查询条件 projection ：可选，使用投影操作符指定返回的键。查询时返回文档中所有键值,只需省略该参数即可（默认省略）。 db...","head":[["meta",{"property":"og:url","content":"https://godx-18.github.io/%E5%A4%A7%E5%89%8D%E7%AB%AF/Nodejs%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/MongoDB/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/02-%E6%9F%A5%E8%AF%A2%E6%96%87%E6%A1%A3.html"}],["meta",{"property":"og:site_name","content":"烜"}],["meta",{"property":"og:title","content":"查询文档"}],["meta",{"property":"og:description","content":"基本查询 读取操作从集合中检索文档；即查询集合中的文档。 MongoDB提供了以下方法来从集合中读取文档： db.collection.find(query, projection) query ：可选，使用查询操作符指定查询条件 projection ：可选，使用投影操作符指定返回的键。查询时返回文档中所有键值,只需省略该参数即可（默认省略）。 db..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-26T01:51:10.000Z"}],["meta",{"property":"article:author","content":"GodX"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"noSQL"}],["meta",{"property":"article:modified_time","content":"2024-03-26T01:51:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"查询文档\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-26T01:51:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GodX\\",\\"url\\":\\"https://github.com/GodX-18\\"}]}"]]},"headers":[{"level":2,"title":"基本查询","slug":"基本查询","link":"#基本查询","children":[{"level":3,"title":"查询所有文档","slug":"查询所有文档","link":"#查询所有文档","children":[]},{"level":3,"title":"指定返回的文档字段","slug":"指定返回的文档字段","link":"#指定返回的文档字段","children":[]},{"level":3,"title":"精准查询","slug":"精准查询","link":"#精准查询","children":[]},{"level":3,"title":"指定 AND 条件(且)","slug":"指定-and-条件-且","link":"#指定-and-条件-且","children":[]},{"level":3,"title":"指定 OR 条件(或)","slug":"指定-or-条件-或","link":"#指定-or-条件-或","children":[]},{"level":3,"title":"指定 AND 和 OR 条件","slug":"指定-and-和-or-条件","link":"#指定-and-和-or-条件","children":[]},{"level":3,"title":"查询运算符","slug":"查询运算符","link":"#查询运算符","children":[]},{"level":3,"title":"查询嵌套文档","slug":"查询嵌套文档","link":"#查询嵌套文档","children":[]},{"level":3,"title":"查询嵌套字段","slug":"查询嵌套字段","link":"#查询嵌套字段","children":[]}]},{"level":2,"title":"查询数组","slug":"查询数组","link":"#查询数组","children":[{"level":3,"title":"匹配一个数组","slug":"匹配一个数组","link":"#匹配一个数组","children":[]},{"level":3,"title":"查询数组中的元素","slug":"查询数组中的元素","link":"#查询数组中的元素","children":[]},{"level":3,"title":"为数组元素指定多个条件","slug":"为数组元素指定多个条件","link":"#为数组元素指定多个条件","children":[]}]},{"level":2,"title":"查询嵌入文档的数组","slug":"查询嵌入文档的数组","link":"#查询嵌入文档的数组","children":[{"level":3,"title":"查询嵌入在数组中的文档","slug":"查询嵌入在数组中的文档","link":"#查询嵌入在数组中的文档","children":[]},{"level":3,"title":"在文档数组中的字段上指定查询条件","slug":"在文档数组中的字段上指定查询条件","link":"#在文档数组中的字段上指定查询条件","children":[]},{"level":3,"title":"为文档数组指定多个条件","slug":"为文档数组指定多个条件","link":"#为文档数组指定多个条件","children":[]}]},{"level":2,"title":"指定从查询返回的项目字段","slug":"指定从查询返回的项目字段","link":"#指定从查询返回的项目字段","children":[{"level":3,"title":"返回匹配文档中所有字段","slug":"返回匹配文档中所有字段","link":"#返回匹配文档中所有字段","children":[]},{"level":3,"title":"仅返回指定字段和 _id 字段","slug":"仅返回指定字段和-id-字段","link":"#仅返回指定字段和-id-字段","children":[]},{"level":3,"title":"禁止 _id 字段","slug":"禁止-id-字段","link":"#禁止-id-字段","children":[]},{"level":3,"title":"返回所有但排除的字段","slug":"返回所有但排除的字段","link":"#返回所有但排除的字段","children":[]},{"level":3,"title":"返回嵌入式文档中的特定字段","slug":"返回嵌入式文档中的特定字段","link":"#返回嵌入式文档中的特定字段","children":[]},{"level":3,"title":"禁止嵌入文档中的特定字段","slug":"禁止嵌入文档中的特定字段","link":"#禁止嵌入文档中的特定字段","children":[]},{"level":3,"title":"在数组中的嵌入式文档上投射","slug":"在数组中的嵌入式文档上投射","link":"#在数组中的嵌入式文档上投射","children":[]},{"level":3,"title":"返回数组中的项目特定数组元素","slug":"返回数组中的项目特定数组元素","link":"#返回数组中的项目特定数组元素","children":[]}]},{"level":2,"title":"查询空字段或缺少字段","slug":"查询空字段或缺少字段","link":"#查询空字段或缺少字段","children":[{"level":3,"title":"相等过滤器","slug":"相等过滤器","link":"#相等过滤器","children":[]},{"level":3,"title":"类型检查","slug":"类型检查","link":"#类型检查","children":[]},{"level":3,"title":"存在检查","slug":"存在检查","link":"#存在检查","children":[]}]}],"git":{"createdTime":1700614687000,"updatedTime":1711417870000,"contributors":[{"name":"GodX","email":"1046529973@qq.com","commits":3}]},"readingTime":{"minutes":12.28,"words":3685},"filePathRelative":"大前端/Nodejs全栈开发/MongoDB/基础操作/02-查询文档.md","localizedDate":"2023年11月22日","excerpt":"<h2>基本查询</h2>\\n<p>读取操作从集合中检索文档；即查询集合中的文档。 MongoDB提供了以下方法来从集合中读取文档：</p>\\n<ul>\\n<li>\\n<p>db.collection.find(query, projection)</p>\\n<ul>\\n<li>\\n<p>query ：可选，使用查询操作符指定查询条件</p>\\n</li>\\n<li>\\n<p>projection ：可选，使用投影操作符指定返回的键。查询时返回文档中所有键值,只需省略该参数即可（默认省略）。</p>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>db.collection.findOne()</p>\\n</li>\\n</ul>","autoDesc":true}');export{$ as comp,E as data};
