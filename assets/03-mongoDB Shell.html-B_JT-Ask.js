import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as s,c,b as o,e,d as n,a as t}from"./app-oXp7PBbS.js";const i={},r=t(`<p>MongoDB Shell是<code>mongosh</code>一个功能齐全的 JavaScript 和 Node.js 16.x REPL环境，用于与 MongoDB 部署交互。您可以使用MongoDB Shell直接对数据库测试查询和操作。</p><h2 id="mongodb-shell与旧版mongoshell" tabindex="-1"><a class="header-anchor" href="#mongodb-shell与旧版mongoshell"><span>MongoDB Shell与旧版<code>mongo</code>Shell</span></a></h2><p>旧版<code>mongo</code>shell 在 MongoDB 5.0 中已弃用，并在 MongoDB 6.0 中删除。与旧版 Shell 相比，新的 MongoDB Shell<code>mongosh</code>具有许多优势。新外壳改进了：</p><ul><li>Node.js 与 MongoDB 的兼容性</li><li>语法高亮</li><li>命令历史</li><li>记录</li></ul><p>一些旧方法不可用或已被<code>mongosh</code>. 为了保持向后兼容性，支持的旧方法<code>mongosh</code>使用与 shell 中相应方法相同的语法<code>mongo</code>。</p><h2 id="启动-mongo-shell-并连接到-mongodb" tabindex="-1"><a class="header-anchor" href="#启动-mongo-shell-并连接到-mongodb"><span>启动 mongo Shell 并连接到 MongoDB</span></a></h2><p><strong>连接默认端口上的本地 MongoDB 服务</strong></p><p>您可以在没有任何命令行选项的情况下运行 mongo shell，以使用默认端口 <code>27017</code> 连接到在本地主机上运行的 MongoDB 实例：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mongosh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这相当于以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mongosh <span class="token string">&quot;mongodb://localhost:27017&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>连接非默认端口上的本地 MongoDB 服务</strong></p><p>要指定要连接到本地主机的端口，您可以使用：</p><ul><li>连接字符串与所选端口</li><li><code>--port</code>命令行选项</li></ul><p>例如，以下命令连接到在本地主机端口 28015 上运行的部署：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mongosh <span class="token string">&quot;mongodb://localhost:28015&quot;</span>
<span class="token comment"># 简写</span>
mongosh <span class="token parameter variable">--port</span> <span class="token number">28015</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>连接远程主机上的 MongoDB 服务</strong></p><p>要指定远程主机和端口，您可以使用：</p><ul><li>连接字符串与所选的主机和端口。</li><li>和命令行选项<code>--host</code>。<code>--port</code>如果省略该 <code>--port</code>选项，<code>mongosh</code>则使用默认端口 27017。</li></ul><p>例如，以下命令连接到在主机<code>mongodb0.example.com</code>和端口 28015 上运行的 MongoDB 部署：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mongosh <span class="token string">&quot;mongodb://mongodb0.example.com:28015&quot;</span>
<span class="token comment"># 另一种写法</span>
mongosh <span class="token parameter variable">--host</span> mongodb0.example.com <span class="token parameter variable">--port</span> <span class="token number">28015</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),g={href:"https://www.mongodb.com/docs/mongodb-shell/connect/#specify-connection-options",target:"_blank",rel:"noopener noreferrer"},p=o("p",null,"指定不同的连接选项以连接到不同类型的部署。官网目前有六种连接选项，这里只列举其中一个说明。",-1),h=o("p",null,[o("strong",null,"通过身份验证连接")],-1),m={href:"https://www.mongodb.com/docs/mongodb-shell/reference/options/#std-option-mongosh.--username",target:"_blank",rel:"noopener noreferrer"},u=o("code",null,"--username",-1),b={href:"https://www.mongodb.com/docs/mongodb-shell/reference/options/#std-option-mongosh.--authenticationDatabase",target:"_blank",rel:"noopener noreferrer"},v=o("code",null,"--authenticationDatabase",-1),D=o("code",null,"mongosh",-1),B=t(`<p>例如，要以数据库用户身份进行身份验证<code>alice</code>，<code>admin</code> 请运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mongosh <span class="token string">&quot;mongodb://mongodb0.example.com:28015&quot;</span> <span class="token parameter variable">--username</span> alice <span class="token parameter variable">--authenticationDatabase</span> admin <span class="token parameter variable">--password</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>注意：如果您指定--password而不输入用户密码，则外壳程序将提示您输入密码。</p></div><h2 id="断开连接" tabindex="-1"><a class="header-anchor" href="#断开连接"><span>断开连接</span></a></h2><p>要断开与部署的连接并退出<code>mongosh</code>，请执行以下操作之一：</p><ul><li>输入<code>.exit</code>、<code>exit</code>、 或<code>exit()</code>。</li><li>键入<code>quit</code>或<code>quit()</code>。</li><li>按<code>Ctrl</code>+ <code>D</code>。</li><li>按<code>Ctrl</code>+<code>C</code>两次。</li></ul><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h2><p>MongoDB Shell是一个交互式的JavaScript接口，可以用来操作MongoDB数据库。以下是一些常用的MongoDB Shell命令的总结：</p><ul><li>数据库操作 <ul><li><code>show dbs</code>：显示所有数据库</li><li><code>db</code>：显示当前使用的数据库</li><li><code>use &lt;db&gt;</code>：切换到指定的数据库，如果不存在则创建</li><li><code>db.dropDatabase()</code>：删除当前数据库</li><li><code>db.copyDatabase(fromdb, todb, fromhost)</code>：从指定的主机上复制一个数据库到另一个数据库</li><li><code>db.cloneDatabase(fromhost)</code>：从指定的主机上克隆一个数据库</li><li><code>db.stats()</code>：显示当前数据库的状态信息</li><li><code>db.version()</code>：显示当前数据库的版本信息</li><li><code>db.getMongo()</code>：显示当前数据库的连接机器地址</li><li><code>db.repairDatabase()</code>：修复当前数据库，清除数据碎片，释放空间</li></ul></li><li>集合操作 <ul><li><code>show collections</code>：显示当前数据库中的所有集合</li><li><code>db.createCollection(name, options)</code>：创建一个集合，可以指定选项，如大小、最大文档数等</li><li><code>db.&lt;collection&gt;.drop()</code>：删除一个集合</li><li><code>db.&lt;collection&gt;.renameCollection(newname)</code>：重命名一个集合</li><li><code>db.&lt;collection&gt;.stats()</code>：显示一个集合的状态信息</li></ul></li><li>文档操作 <ul><li><code>db.&lt;collection&gt;.find(query, projection)</code>：查询一个集合中的文档，可以指定查询条件和投影字段</li><li><code>db.&lt;collection&gt;.findOne(query, projection)</code>：查询一个集合中的第一个文档，可以指定查询条件和投影字段</li><li><code>db.&lt;collection&gt;.insert(doc)</code>：向一个集合中插入一个或多个文档</li><li><code>db.&lt;collection&gt;.update(query, update, options)</code>：更新一个集合中的一个或多个文档，可以指定更新条件、更新内容和选项，如是否多条、是否插入等</li><li><code>db.&lt;collection&gt;.remove(query, justOne)</code>：删除一个集合中的一个或多个文档，可以指定删除条件和是否只删除一条</li><li><code>db.&lt;collection&gt;.count(query)</code>：统计一个集合中符合条件的文档数</li><li><code>db.&lt;collection&gt;.distinct(field, query)</code>：查询一个集合中某个字段的去重值，可以指定查询条件</li><li><code>db.&lt;collection&gt;.aggregate(pipeline, options)</code>：对一个集合中的文档进行聚合操作，可以指定管道阶段和选项</li></ul></li><li>索引操作 <ul><li><code>db.&lt;collection&gt;.createIndex(keys, options)</code>：为一个集合创建一个或多个索引，可以指定索引键和选项，如唯一性、过期时间等</li><li><code>db.&lt;collection&gt;.dropIndex(name)</code>：删除一个集合中的指定索引</li><li><code>db.&lt;collection&gt;.dropIndexes()</code>：删除一个集合中的所有索引</li><li><code>db.&lt;collection&gt;.getIndexes()</code>：获取一个集合中的所有索引信息</li></ul></li><li>用户操作 <ul><li><code>show users</code>：显示当前数据库中的所有用户</li><li><code>show roles</code>：显示当前数据库中的所有角色</li><li><code>db.createUser(user)</code>：创建一个用户，可以指定用户名、密码、角色等信息</li><li><code>db.dropUser(username)</code>：删除一个用户</li><li><code>db.auth(username, password)</code>：对当前数据库进行认证</li></ul></li></ul>`,9),_={href:"https://www.cnblogs.com/zhangyangdev/p/11546063.html",target:"_blank",rel:"noopener noreferrer"},M={href:"https://zhuanlan.zhihu.com/p/101297478",target:"_blank",rel:"noopener noreferrer"};function S(f,x){const l=a("ExternalLinkIcon");return s(),c("div",null,[r,o("p",null,[o("strong",null,[o("a",g,[e("指定连接选项"),n(l)])])]),p,h,o("p",null,[e("要连接到需要身份验证的 MongoDB 部署，请使用 "),o("a",m,[u,n(l)]),e("和"),o("a",b,[v,n(l)]),e("选项。"),D,e("提示您输入密码，密码会在您键入时隐藏。")]),B,o("p",null,[e("以上是一些常用的MongoDB Shell命令，更多详细信息可以参考"),o("a",_,[e("官方文档"),n(l)]),e("或者"),o("a",M,[e("这篇文章"),n(l)]),e("。")])])}const w=d(i,[["render",S],["__file","03-mongoDB Shell.html.vue"]]),E=JSON.parse('{"path":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/Nodejs%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/MongoDB/03-mongoDB%20Shell.html","title":"mongoDB Shell","lang":"zh-CN","frontmatter":{"title":"mongoDB Shell","order":3,"category":["前端"],"tag":["数据库","noSQL"],"description":"MongoDB Shell是mongosh一个功能齐全的 JavaScript 和 Node.js 16.x REPL环境，用于与 MongoDB 部署交互。您可以使用MongoDB Shell直接对数据库测试查询和操作。 MongoDB Shell与旧版mongoShell 旧版mongoshell 在 MongoDB 5.0 中已弃用，并在 Mon...","head":[["meta",{"property":"og:url","content":"https://godx-18.github.io/%E5%A4%A7%E5%89%8D%E7%AB%AF/Nodejs%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/MongoDB/03-mongoDB%20Shell.html"}],["meta",{"property":"og:site_name","content":"烜"}],["meta",{"property":"og:title","content":"mongoDB Shell"}],["meta",{"property":"og:description","content":"MongoDB Shell是mongosh一个功能齐全的 JavaScript 和 Node.js 16.x REPL环境，用于与 MongoDB 部署交互。您可以使用MongoDB Shell直接对数据库测试查询和操作。 MongoDB Shell与旧版mongoShell 旧版mongoshell 在 MongoDB 5.0 中已弃用，并在 Mon..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-22T00:58:07.000Z"}],["meta",{"property":"article:author","content":"GodX"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"noSQL"}],["meta",{"property":"article:modified_time","content":"2023-11-22T00:58:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"mongoDB Shell\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-22T00:58:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GodX\\",\\"url\\":\\"https://github.com/GodX-18\\"}]}"]]},"headers":[{"level":2,"title":"MongoDB Shell与旧版mongoShell","slug":"mongodb-shell与旧版mongoshell","link":"#mongodb-shell与旧版mongoshell","children":[]},{"level":2,"title":"启动 mongo Shell 并连接到 MongoDB","slug":"启动-mongo-shell-并连接到-mongodb","link":"#启动-mongo-shell-并连接到-mongodb","children":[]},{"level":2,"title":"断开连接","slug":"断开连接","link":"#断开连接","children":[]},{"level":2,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]}],"git":{"createdTime":1700614687000,"updatedTime":1700614687000,"contributors":[{"name":"GodX","email":"1046529973@qq.com","commits":1}]},"readingTime":{"minutes":4.59,"words":1377},"filePathRelative":"大前端/Nodejs全栈开发/MongoDB/03-mongoDB Shell.md","localizedDate":"2023年11月22日","excerpt":"<p>MongoDB Shell是<code>mongosh</code>一个功能齐全的 JavaScript 和 Node.js 16.x REPL环境，用于与 MongoDB 部署交互。您可以使用MongoDB Shell直接对数据库测试查询和操作。</p>\\n<h2>MongoDB Shell与旧版<code>mongo</code>Shell</h2>\\n<p>旧版<code>mongo</code>shell 在 MongoDB 5.0 中已弃用，并在 MongoDB 6.0 中删除。与旧版 Shell 相比，新的 MongoDB Shell<code>mongosh</code>具有许多优势。新外壳改进了：</p>","autoDesc":true}');export{w as comp,E as data};
