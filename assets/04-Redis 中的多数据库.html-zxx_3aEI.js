import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as e,a}from"./app-oXp7PBbS.js";const t={},p=a(`<p>一个 Redis 实例提供了多个用来存储数据的字典，客户端可以指定将数据存储在哪个字典中。这与我们熟知的在一个关系数据库中可以创建多个数据库类似，所有可以将其中的每个字典都理解成一个独立的数据库。</p><p>Redis 默认支持 16 个数据库，分别编号为 0、1、2、...14、15</p><ul><li>Redis 不支持自定义数据库名字</li><li>因为每个数据库都以编号命名，所有开发者必须要明确哪个数据库存放了哪些数据</li><li>可以通过配置参数 <code>databases</code> 修改支持的数据库个数</li></ul><p>每个数据库都是独立的，也就是说你在 0 号数据库中插入的数据在 1 号数据库是访问不到的。</p><p>客户端与 Redis 建立连接后自动选择 0 号数据库，我们可以使用 <code>SELECT</code> 命令来更换数据库。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> SET a <span class="token number">1</span>
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> KEYS *
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;a&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> SELECT <span class="token number">16</span>
<span class="token punctuation">(</span>error<span class="token punctuation">)</span> ERR DB index is out of range
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> SELECT <span class="token number">15</span>
OK
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> SET b <span class="token number">2</span>
OK
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> KEYS *
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;b&quot;</span>
<span class="token number">127.0</span>.0.1:6379<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> SELECT <span class="token number">0</span>
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> KEYS *
<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">&quot;a&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>

<span class="token comment"># 将指定 key 移动到指定数据库</span>
move key db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当选择的数据库编号超过最大数据库编号时，默认编号的数据库</p><p><strong>Redis 不支持为每个数据库设置不同的访问密码，所有一个客户端要么可以访问全部数据库，要么一个数据库也没有权限访问。</strong></p><p>最重要的一点是多个数据库之间并不是完全隔离的，比如 <code>FLUSHALL</code> 命令可以清空一个 Redis 实例中所有数据库中的数据。</p><p>综上所述，这些数据库更像是一个命名空间，而<strong>不适宜存储不同应用程序的数据</strong>，比如不适宜使用 0 号数据库存储 A 应用数据而使用 1 号数据库存储 B 应用数据，这是非常不推荐的做法！！！</p><p><strong>不同的应用应该使用不同的 Redis 实例存储数据</strong>。由于 Redis 非常轻量级，一个空的 Redis 占用的内存只有 1 MB 作用，所以不用担心多个 Redis 实例会额外占用很多内存的问题。</p>`,11),o=[p];function i(r,c){return n(),e("div",null,o)}const u=s(t,[["render",i],["__file","04-Redis 中的多数据库.html.vue"]]),m=JSON.parse('{"path":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/Nodejs%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/Redis/04-Redis%20%E4%B8%AD%E7%9A%84%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93.html","title":"Redis 中的多数据库","lang":"zh-CN","frontmatter":{"title":"Redis 中的多数据库","order":4,"category":["前端"],"tag":["nodejs","Redis"],"description":"一个 Redis 实例提供了多个用来存储数据的字典，客户端可以指定将数据存储在哪个字典中。这与我们熟知的在一个关系数据库中可以创建多个数据库类似，所有可以将其中的每个字典都理解成一个独立的数据库。 Redis 默认支持 16 个数据库，分别编号为 0、1、2、...14、15 Redis 不支持自定义数据库名字 因为每个数据库都以编号命名，所有开发者必...","head":[["meta",{"property":"og:url","content":"https://godx-18.github.io/%E5%A4%A7%E5%89%8D%E7%AB%AF/Nodejs%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/Redis/04-Redis%20%E4%B8%AD%E7%9A%84%E5%A4%9A%E6%95%B0%E6%8D%AE%E5%BA%93.html"}],["meta",{"property":"og:site_name","content":"烜"}],["meta",{"property":"og:title","content":"Redis 中的多数据库"}],["meta",{"property":"og:description","content":"一个 Redis 实例提供了多个用来存储数据的字典，客户端可以指定将数据存储在哪个字典中。这与我们熟知的在一个关系数据库中可以创建多个数据库类似，所有可以将其中的每个字典都理解成一个独立的数据库。 Redis 默认支持 16 个数据库，分别编号为 0、1、2、...14、15 Redis 不支持自定义数据库名字 因为每个数据库都以编号命名，所有开发者必..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-22T00:58:07.000Z"}],["meta",{"property":"article:author","content":"GodX"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:modified_time","content":"2023-11-22T00:58:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 中的多数据库\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-22T00:58:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GodX\\",\\"url\\":\\"https://github.com/GodX-18\\"}]}"]]},"headers":[],"git":{"createdTime":1700614687000,"updatedTime":1700614687000,"contributors":[{"name":"GodX","email":"1046529973@qq.com","commits":1}]},"readingTime":{"minutes":2,"words":600},"filePathRelative":"大前端/Nodejs全栈开发/Redis/04-Redis 中的多数据库.md","localizedDate":"2023年11月22日","excerpt":"<p>一个 Redis 实例提供了多个用来存储数据的字典，客户端可以指定将数据存储在哪个字典中。这与我们熟知的在一个关系数据库中可以创建多个数据库类似，所有可以将其中的每个字典都理解成一个独立的数据库。</p>\\n<p>Redis 默认支持 16 个数据库，分别编号为 0、1、2、...14、15</p>\\n<ul>\\n<li>Redis 不支持自定义数据库名字</li>\\n<li>因为每个数据库都以编号命名，所有开发者必须要明确哪个数据库存放了哪些数据</li>\\n<li>可以通过配置参数 <code>databases</code> 修改支持的数据库个数</li>\\n</ul>\\n<p>每个数据库都是独立的，也就是说你在 0 号数据库中插入的数据在 1 号数据库是访问不到的。</p>","autoDesc":true}');export{u as comp,m as data};
