import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c as i,b as n,e as s,d as t,a as c}from"./app-oXp7PBbS.js";const l={},u=n("h2",{id:"hash-模式-和-history-模式",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hash-模式-和-history-模式"},[n("span",null,"Hash 模式 和 History 模式")])],-1),r=n("h3",{id:"表现形式的区别",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#表现形式的区别"},[n("span",null,"表现形式的区别")])],-1),d=n("br",null,null,-1),k={href:"https://music.163.com/#/playlist?id=3102961863",target:"_blank",rel:"noopener noreferrer"},v=n("br",null,null,-1),m={href:"https://music.163.comlplaylist/3102961863",target:"_blank",rel:"noopener noreferrer"},h=c(`<h3 id="原理的区别" tabindex="-1"><a class="header-anchor" href="#原理的区别"><span>原理的区别</span></a></h3><ul><li><p>hash 模式<br> Vue Router 默认使用的是 <code>hash</code> 模式，使用 <code>hash</code> 来模拟一个完整的 URL，通过<code>onhashchange</code> 监听路径的变化</p></li><li><p>History 模式</p></li><li><p>通过 <code>history.pushState()</code> 方法改变地址栏</p></li><li><p>监听 <code>popstate</code> 事件</p></li><li><p>根据当前路由地址找到对应组件重新渲染</p></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>history<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
history<span class="token punctuation">.</span><span class="token function">replacestate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>本地配置 history 模式不会报错，是因为Vue-cli 自带的服务器已经帮我们配置好了</p></div><h3 id="history-对应后端的配置" tabindex="-1"><a class="header-anchor" href="#history-对应后端的配置"><span>History 对应后端的配置</span></a></h3><p><strong>Nodejs 环境</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 导入处理 history 模式的模块</span>
<span class="token keyword">const</span> history <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;connect-history-api-fallback&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 导入 express</span>
<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// 注册处理 history 模式的中间件</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">history</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 处理静态资源的中间件，网站根目录 ../web</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../web&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 开启服务器，端口是 3000</span>
app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;服务器开启，端口：3000&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>nginx 环境配置</strong></p><p><em>nginx 相关命令</em></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 启动</span>
start nginx
<span class="token comment"># 重启</span>
nginx <span class="token parameter variable">-s</span> reload
<span class="token comment"># 停止</span>
nginx <span class="token parameter variable">-s</span> stop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>修改 nginx 配置文件</em></p><figure><img src="https://raw.githubusercontent.com/GodX-18/picBed/main/image-20221128105824933.png" alt="image-20221128105824933" tabindex="0" loading="lazy"><figcaption>image-20221128105824933</figcaption></figure><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>  location <span class="token operator">/</span> <span class="token punctuation">{</span>
            root   html<span class="token punctuation">;</span>
            index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
            try_files $uri $uri<span class="token operator">/</span> <span class="token operator">/</span>index<span class="token punctuation">.</span>html<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>重启 nginx</em></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nginx <span class="token parameter variable">-s</span> reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>修改配置文件后需要重启才能生效，且修改的不是默认的配置文件。</p></div><p><strong>执行过程</strong></p><p>浏览器向服务器去请求这个地址，nginx 服务器接受到这次请求之后，回去找请求路径对应的文件，当找不到文件时，会根据配置文件中的 <code>try_files</code>选项去依次查找，如果还找不到，会默认返回网站根目录的 index.html。浏览器接受到这个网页之后，会在客户端去解析所对应的组件</p><h2 id="实现原理" tabindex="-1"><a class="header-anchor" href="#实现原理"><span>实现原理</span></a></h2><h3 id="前置知识" tabindex="-1"><a class="header-anchor" href="#前置知识"><span>前置知识</span></a></h3><ul><li>插件</li><li>混入</li><li>Vue.observable</li><li>插槽</li><li>render 函数</li><li>运行时和完整版的 Vue</li></ul><h3 id="vue-router-的使用方式" tabindex="-1"><a class="header-anchor" href="#vue-router-的使用方式"><span>Vue Router 的使用方式</span></a></h3><figure><img src="https://raw.githubusercontent.com/GodX-18/picBed/main/image-20221129093100258.png" alt="image-20221129093100258" tabindex="0" loading="lazy"><figcaption>image-20221129093100258</figcaption></figure><img src="https://raw.githubusercontent.com/GodX-18/picBed/main/image-20221129093413802.png" alt="image-20221129093413802" style="zoom:67%;"><h3 id="vue-的构建版本" tabindex="-1"><a class="header-anchor" href="#vue-的构建版本"><span>Vue 的构建版本</span></a></h3><ul><li>运行时版：不支持 template 模板，需要打包的时候提前编译</li><li>完整版：包含运行时和编译器，体积比运行时版大10K左右，程序运行的时候把模板转换成 render 函数</li></ul><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>Vue-cli 默认安装的 vue 版本不包含编译器，单文件组件中的模版需要编译后才能展示。可以在 <code>vue.config.js</code>中配置使用包含编译器的vue，如下：</p><figure><img src="https://raw.githubusercontent.com/GodX-18/picBed/main/image-20221129105745840.png" alt="image-20221129105745840" tabindex="0" loading="lazy"><figcaption>image-20221129105745840</figcaption></figure><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">runtimeCompiler</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="不使用编译器渲染视图-h-函数" tabindex="-1"><a class="header-anchor" href="#不使用编译器渲染视图-h-函数"><span>不使用编译器渲染视图- h 函数</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;router-link&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
            <span class="token literal-property property">props</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token literal-property property">to</span><span class="token operator">:</span>String
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token comment">// 运行时版本不支持 template 选项</span>
            <span class="token comment">// template: &#39;&lt;a :href=&quot;to&quot;&gt;&lt;slot&gt;&lt;/slot&gt;&gt;&lt;/a&gt;&#39;,</span>
            <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
                    <span class="token literal-property property">attrs</span><span class="token operator">:</span><span class="token punctuation">{</span> <span class="token comment">// 标签属性（dom对象）</span>
                        <span class="token literal-property property">href</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>to
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">on</span><span class="token operator">:</span><span class="token punctuation">{</span>
                        <span class="token literal-property property">click</span><span class="token operator">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>clickhander
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">methods</span><span class="token operator">:</span><span class="token punctuation">{</span>
                <span class="token function">clickhander</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    history<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token keyword">this</span><span class="token punctuation">.</span>to<span class="token punctuation">)</span>
                    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span>data<span class="token punctuation">.</span>current<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span>to
                    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="实现思路" tabindex="-1"><a class="header-anchor" href="#实现思路"><span>实现思路</span></a></h3><ul><li>创建 LVueRouter 插件，静态方法 install <ul><li>判断插件是否已经被加载</li><li>当 Vue 加载的时候把传入的 router 对象挂载到 Vue 实例上（注意：只执行一次）</li></ul></li><li>创建 LVueRouter 类 <ul><li>初始化，options、 routeMap、app(简化操作，创建 Vue 实例作为响应式数据记录当前路径）</li><li>initRouteMap( 遍历所有路由信息，把组件和路由的映射记录到 routeMap 对象中</li><li>注册 popstate 事件，当路由地址发生变化，重新记录当前的路径</li><li>创建 router-link 和 router-view 组件</li><li>当路径改变的时候通过当前路径在 routerMap 对象中找到对应的组件，渲染 router-view</li></ul></li></ul><h3 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>install</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">VueRouter</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token function">install</span> <span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 如果插件已经安装直接返回</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>VueRouter<span class="token punctuation">.</span>install<span class="token punctuation">.</span>installed <span class="token operator">&amp;&amp;</span> _Vue <span class="token operator">===</span> Vue<span class="token punctuation">)</span> <span class="token keyword">return</span>
    VueRouter<span class="token punctuation">.</span>install<span class="token punctuation">.</span>installed <span class="token operator">=</span> <span class="token boolean">true</span>
    _Vue <span class="token operator">=</span> Vue
    Vue<span class="token punctuation">.</span><span class="token function">mixin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function">beforeCreate</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 判断 router 对象是否已经挂载了 Vue 实例上</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>router<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 把 router 对象注入到 Vue 实例上</span>
          <span class="token class-name">_Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$router <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$options<span class="token punctuation">.</span>router
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数"><span>构造函数</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token comment">// 记录配置选项</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options<span class="token punctuation">;</span>
  	<span class="token comment">// 记录路径和相应的配置</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>routeMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// 利用 observable 创建响应式对象</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> _Vue<span class="token punctuation">.</span><span class="token function">observable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">current</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span> <span class="token comment">// 当前的路由地址</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token comment">// 初始化</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="createroutemap" tabindex="-1"><a class="header-anchor" href="#createroutemap"><span>createRouteMap</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> <span class="token function">createRouteMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//遍历所有的路由规则 把路由规则解析成键值对的形式存储到routeMap中</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>routes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">route</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>routeMap<span class="token punctuation">[</span>route<span class="token punctuation">.</span>path<span class="token punctuation">]</span> <span class="token operator">=</span> route<span class="token punctuation">.</span>component<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="initcomponent-初始化路由组件" tabindex="-1"><a class="header-anchor" href="#initcomponent-初始化路由组件"><span>initComponent-初始化路由组件</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> <span class="token function">initComponent</span><span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// &lt;router-link to=&quot;/&quot;&gt;Home&lt;/router-link&gt;</span>
    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;router-link&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">to</span><span class="token operator">:</span> String
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// 运行时版本不支持 template 选项</span>
      <span class="token comment">// template: &#39;&lt;a :href=&quot;to&quot;&gt;&lt;slot&gt;&lt;/slot&gt;&gt;&lt;/a&gt;&#39;,</span>
      <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>
          <span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span>
          <span class="token punctuation">{</span>
            <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token comment">// 标签属性（dom对象）</span>
              <span class="token literal-property property">href</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>to
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">on</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">click</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clickhander
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">.</span>default<span class="token punctuation">]</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token function">clickhander</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 改变路由地址，不会向服务器发送请求</span>
          history<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">// 响应式对象，修改数据后会重新加载对应的组件</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span>data<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>to<span class="token punctuation">;</span>
          <span class="token comment">// 阻止默认事件</span>
          e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// template:&quot;&lt;a :href=&#39;to&#39;&gt;&lt;slot&gt;&lt;/slot&gt;&lt;&gt;&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
    Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">&quot;router-view&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// self.data.current</span>
        <span class="token keyword">const</span> cm <span class="token operator">=</span> self<span class="token punctuation">.</span>routeMap<span class="token punctuation">[</span>self<span class="token punctuation">.</span>data<span class="token punctuation">.</span>current<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>cm<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="initevent" tabindex="-1"><a class="header-anchor" href="#initevent"><span>initEvent</span></a></h3><p>监测路由的前进与后退事件，修改响应式对象，从而刷新视图</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> <span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;popstate&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>data<span class="token punctuation">.</span>current <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="init" tabindex="-1"><a class="header-anchor" href="#init"><span>init</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>  <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createRouteMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initComponent</span><span class="token punctuation">(</span>_Vue<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,44);function b(g,y){const a=p("ExternalLinkIcon");return o(),i("div",null,[u,r,n("ul",null,[n("li",null,[s("Hash 模式"),d,n("a",k,[s("https://music.163.com/#/playlist?id=3102961863"),t(a)])]),n("li",null,[s("History 模式"),v,n("a",m,[s("https://music.163.comlplaylist/3102961863"),t(a)])])]),h])}const w=e(l,[["render",b],["__file","01-Vue-Router.html.vue"]]),V=JSON.parse('{"path":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/Vue%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%8E%E8%BF%9B%E9%98%B6/01-Vue-Router.html","title":"Vue-Router 实现原理","lang":"zh-CN","frontmatter":{"title":"Vue-Router 实现原理","icon":"guide","order":1,"category":["前端","源码分析"],"tag":["vue"],"description":"Hash 模式 和 History 模式 表现形式的区别 Hash 模式 https://music.163.com/#/playlist?id=3102961863 History 模式 https://music.163.comlplaylist/3102961863 原理的区别 hash 模式 Vue Router 默认使用的是 hash 模式，...","head":[["meta",{"property":"og:url","content":"https://godx-18.github.io/%E5%A4%A7%E5%89%8D%E7%AB%AF/Vue%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E4%B8%8E%E8%BF%9B%E9%98%B6/01-Vue-Router.html"}],["meta",{"property":"og:site_name","content":"烜"}],["meta",{"property":"og:title","content":"Vue-Router 实现原理"}],["meta",{"property":"og:description","content":"Hash 模式 和 History 模式 表现形式的区别 Hash 模式 https://music.163.com/#/playlist?id=3102961863 History 模式 https://music.163.comlplaylist/3102961863 原理的区别 hash 模式 Vue Router 默认使用的是 hash 模式，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/GodX-18/picBed/main/image-20221128105824933.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-27T09:56:32.000Z"}],["meta",{"property":"article:author","content":"GodX"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:modified_time","content":"2023-09-27T09:56:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue-Router 实现原理\\",\\"image\\":[\\"https://raw.githubusercontent.com/GodX-18/picBed/main/image-20221128105824933.png\\",\\"https://raw.githubusercontent.com/GodX-18/picBed/main/image-20221129093100258.png\\",\\"https://raw.githubusercontent.com/GodX-18/picBed/main/image-20221129105745840.png\\"],\\"dateModified\\":\\"2023-09-27T09:56:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GodX\\",\\"url\\":\\"https://github.com/GodX-18\\"}]}"]]},"headers":[{"level":2,"title":"Hash 模式 和 History 模式","slug":"hash-模式-和-history-模式","link":"#hash-模式-和-history-模式","children":[{"level":3,"title":"表现形式的区别","slug":"表现形式的区别","link":"#表现形式的区别","children":[]},{"level":3,"title":"原理的区别","slug":"原理的区别","link":"#原理的区别","children":[]},{"level":3,"title":"History 对应后端的配置","slug":"history-对应后端的配置","link":"#history-对应后端的配置","children":[]}]},{"level":2,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[{"level":3,"title":"前置知识","slug":"前置知识","link":"#前置知识","children":[]},{"level":3,"title":"Vue Router 的使用方式","slug":"vue-router-的使用方式","link":"#vue-router-的使用方式","children":[]},{"level":3,"title":"Vue 的构建版本","slug":"vue-的构建版本","link":"#vue-的构建版本","children":[]},{"level":3,"title":"不使用编译器渲染视图- h 函数","slug":"不使用编译器渲染视图-h-函数","link":"#不使用编译器渲染视图-h-函数","children":[]},{"level":3,"title":"实现思路","slug":"实现思路","link":"#实现思路","children":[]},{"level":3,"title":"install","slug":"install","link":"#install","children":[]},{"level":3,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[]},{"level":3,"title":"createRouteMap","slug":"createroutemap","link":"#createroutemap","children":[]},{"level":3,"title":"initComponent-初始化路由组件","slug":"initcomponent-初始化路由组件","link":"#initcomponent-初始化路由组件","children":[]},{"level":3,"title":"initEvent","slug":"initevent","link":"#initevent","children":[]},{"level":3,"title":"init","slug":"init","link":"#init","children":[]}]}],"git":{"createdTime":1678263228000,"updatedTime":1695808592000,"contributors":[{"name":"GodX","email":"1046529973@qq.com","commits":3}]},"readingTime":{"minutes":4.09,"words":1228},"filePathRelative":"大前端/Vue框架源码与进阶/01-Vue-Router.md","localizedDate":"2023年3月8日","excerpt":"<h2>Hash 模式 和 History 模式</h2>\\n<h3>表现形式的区别</h3>\\n<ul>\\n<li>Hash 模式<br>\\n<a href=\\"https://music.163.com/#/playlist?id=3102961863\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://music.163.com/#/playlist?id=3102961863</a></li>\\n<li>History 模式<br>\\n<a href=\\"https://music.163.comlplaylist/3102961863\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://music.163.comlplaylist/3102961863</a></li>\\n</ul>","autoDesc":true}');export{w as comp,V as data};
