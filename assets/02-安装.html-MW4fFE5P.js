import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as r,c as l,b as s,e,d as i,a as n}from"./app-oXp7PBbS.js";const c={},o=n('<h2 id="关于-redis-的版本" tabindex="-1"><a class="header-anchor" href="#关于-redis-的版本"><span>关于 Redis 的版本</span></a></h2><p>Redis 借鉴了 Linux 操作系统对于版本号的命名规则：</p><ul><li>版本号第二位如果是奇数，则为非稳定版本（例如2.7、2.9、3.1）</li><li>如果是偶数，则为稳定版本（例如2.6、2.8、3.0、3.2）</li></ul><p>当前奇数版本就是下一个稳定版本的开发版本，例如 2.9 版本是 3.0 版本的开发版本。所以我们在生产环境通常选取偶数版本的Redis，如果对于某些新的特性想提前了解和使用，可以选择最新的奇数版本。</p><h2 id="获取-redis-的方式" tabindex="-1"><a class="header-anchor" href="#获取-redis-的方式"><span>获取 Redis 的方式</span></a></h2><p>获取 Redis 的方式有很多种：</p><ul><li>安装到自己电脑上</li><li>安装到虚拟机上</li><li>安装到远程服务器上</li><li>可以从 Docker Hub 获取 Redis 的 Docker 镜像</li><li>...</li></ul><h2 id="在-macos-中安装-redis" tabindex="-1"><a class="header-anchor" href="#在-macos-中安装-redis"><span>在 macOS 中安装 Redis</span></a></h2><p>在 macOS 中有两种方式：</p><ul><li>方式一：编译安装</li><li>方式二（推荐）：使用 Homebrew 安装</li></ul><p>macOS 系统下的软件包管理工具 Homebrew 提供了较新版本的 Redis 包，所以我们可以直接使用它们来安装 Redis，省去了在 Linux 上需要手动编译的麻烦。</p>',11),p={href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"},u=n(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>/bin/bash <span class="token parameter variable">-c</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/master/install.sh<span class="token variable">)</span></span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2、通过 Homebrew 安装 Redis</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="在-windows-中安装-redis" tabindex="-1"><a class="header-anchor" href="#在-windows-中安装-redis"><span>在 Windows 中安装 Redis</span></a></h2><p>Redis 官方不支持 Windows。2011 年微软向 Redis 提交了一个补丁，以使 Redis 可以在 Windows 下编译运行。但被作者拒绝了，原因是在服务器领域上 Linux 已经得到了广泛的使用，让 Redis 能在 Windows 下运行相比而言显得不那么重要。并且 Redis 使用了如写时复制等很多操作系统相关的特性，兼容 Windows 会耗费天大的精力而影响 Redis 的开发。</p>`,5),h={href:"https://github.com/microsoftarchive/redis",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.memurai.com/",target:"_blank",rel:"noopener noreferrer"},v=n(`<h2 id="在-linux-中安装-redis" tabindex="-1"><a class="header-anchor" href="#在-linux-中安装-redis"><span>在 Linux 中安装 Redis</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 下载 Redis 源码</span>
<span class="token function">wget</span> https://download.redis.io/releases/redis-6.0.9.tar.gz

<span class="token comment"># 解压 Redis 压缩包</span>
<span class="token function">tar</span> xzf redis-6.0.9.tar.gz

<span class="token comment"># 进入 Redis 源码目录</span>
<span class="token builtin class-name">cd</span> redis-6.0.9

<span class="token comment"># 编译安装</span>
<span class="token function">make</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在已编译的二进制文件位于 <code>src</code> 目录中。使用以下命令运行 Redis：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>$ ./src/redis-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要将 Redis 二进制文件安装到 <code>/usr/local/bin</code> 中，只需使用：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="运行-redis" tabindex="-1"><a class="header-anchor" href="#运行-redis"><span>运行 Redis</span></a></h2><p>编译后在 Redis 源代码目录的 <code>src</code> 文件夹中会有以下几个可执行文件：</p><table><thead><tr><th><strong>可执行文件</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>redis-server</td><td>Redis 服务器</td></tr><tr><td>redis-cli</td><td>Redis 命令行客户端</td></tr><tr><td>redis-benchmark</td><td>Redis 性能测试工具</td></tr><tr><td>redis-check-aof</td><td>AOF 文件修复工具</td></tr><tr><td>redis-check-dump</td><td>RDB 文件检查工具</td></tr><tr><td>redis-sentinel</td><td>哨兵模式工具</td></tr></tbody></table><p>注意：通过编译源码安装的话，也会产生一个 <code>redis.conf</code> 的配置文件。</p><p>我们最常用是 <code>redis-server</code> 和 <code>redis-cli</code>。</p><p>最简单的，直接运行 <code>redis-server</code> 即可启动 Redis：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>redis-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Redis 默认使用 <code>6379</code> 端口，我们也可以通过 <code>--port</code> 参数指定启动端口：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>redis-server <span class="token parameter variable">--port</span> <span class="token number">1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果需要在后端运行 Redis：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>redis-server <span class="token parameter variable">--daemonize</span> <span class="token function">yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看 Redis 运行状态：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 查看 Redis 后端运行进程</span>
<span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-i</span> redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="停止-redis" tabindex="-1"><a class="header-anchor" href="#停止-redis"><span>停止 Redis</span></a></h2><p>考虑到 Redis 有可能正在将内存中的数据同步到硬盘中，强行终止 Redis 进程可能会导致数据丢失。</p><p>所有正确停止 Redis 的方式应该是向 Redis 发送 SHUTDOWN 命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>redis-cli <span class="token function">shutdown</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当 Redis 手动 Shutdown 命令后，会先断开所有客户端连接，然后根据配置执行持久化，最后完成退出。</p><p>Redis 可以妥善处理 SIGTERM 信号，所有使用 kill Redis 进程的 PID 也可以正常结束 Redis，效果与发送 SHUTDOWN 命令一样。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 通过进程号停止 Redis</span>
<span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token number">4684</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="连接-redis" tabindex="-1"><a class="header-anchor" href="#连接-redis"><span>连接 Redis</span></a></h2><p>redis-cli 是 Redis 自带的基于命令行的 Redis 客户端，也是我们学习和测试 Redis 的重要工具。</p><p>运行 <code>redis-cli</code> 即可连接数据库：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>redis-cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也可以指定服务器地址和端口连接：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>redis-cli <span class="token parameter variable">-h</span> <span class="token number">127.0</span>.0.1 <span class="token parameter variable">-p</span> <span class="token number">1234</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不出差错的话，此时已经连接上 Redis 数据库，我们通过 Redis 提供的 <code>PING</code> 命令来测试与 Redis 是否连接正常：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> PING
PONG
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Redis 返回 <code>PONG</code>，证明连接正常。</p><p>如果想要断开连接：</p><ul><li>命令：<code>quit</code></li><li>快捷键：<code>Ctrl + C</code></li></ul>`,37);function b(g,R){const a=t("ExternalLinkIcon");return r(),l("div",null,[o,s("p",null,[e("1、安装 "),s("a",p,[e("Homebrew"),i(a)])]),u,s("p",null,[e("尽管如此微软还是发布了一个可以在 "),s("a",h,[e("Windows 下的 Redis 版本"),i(a)]),e("，但是这个项目已经不再维护。")]),s("p",null,[e("如果你实在想要在 Windows 上学习使用 Redis 的话可以尝试一下 "),s("a",m,[e("Memurai"),i(a)]),e("，它是一个 Redis for Windows 的替代品，它的核心基于 Redis 源代码并且完全兼容 Redis，但是该项目并未得到微软官方的认可，有兴趣的话可以尝试一下。")]),v])}const x=d(c,[["render",b],["__file","02-安装.html.vue"]]),_=JSON.parse('{"path":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/Nodejs%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/Redis/02-%E5%AE%89%E8%A3%85.html","title":"安装","lang":"zh-CN","frontmatter":{"title":"安装","order":2,"category":["前端"],"tag":["nodejs","Redis"],"description":"关于 Redis 的版本 Redis 借鉴了 Linux 操作系统对于版本号的命名规则： 版本号第二位如果是奇数，则为非稳定版本（例如2.7、2.9、3.1） 如果是偶数，则为稳定版本（例如2.6、2.8、3.0、3.2） 当前奇数版本就是下一个稳定版本的开发版本，例如 2.9 版本是 3.0 版本的开发版本。所以我们在生产环境通常选取偶数版本的Red...","head":[["meta",{"property":"og:url","content":"https://godx-18.github.io/%E5%A4%A7%E5%89%8D%E7%AB%AF/Nodejs%E5%85%A8%E6%A0%88%E5%BC%80%E5%8F%91/Redis/02-%E5%AE%89%E8%A3%85.html"}],["meta",{"property":"og:site_name","content":"烜"}],["meta",{"property":"og:title","content":"安装"}],["meta",{"property":"og:description","content":"关于 Redis 的版本 Redis 借鉴了 Linux 操作系统对于版本号的命名规则： 版本号第二位如果是奇数，则为非稳定版本（例如2.7、2.9、3.1） 如果是偶数，则为稳定版本（例如2.6、2.8、3.0、3.2） 当前奇数版本就是下一个稳定版本的开发版本，例如 2.9 版本是 3.0 版本的开发版本。所以我们在生产环境通常选取偶数版本的Red..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-11-22T00:58:07.000Z"}],["meta",{"property":"article:author","content":"GodX"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:modified_time","content":"2023-11-22T00:58:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"安装\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-11-22T00:58:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GodX\\",\\"url\\":\\"https://github.com/GodX-18\\"}]}"]]},"headers":[{"level":2,"title":"关于 Redis 的版本","slug":"关于-redis-的版本","link":"#关于-redis-的版本","children":[]},{"level":2,"title":"获取 Redis 的方式","slug":"获取-redis-的方式","link":"#获取-redis-的方式","children":[]},{"level":2,"title":"在 macOS 中安装 Redis","slug":"在-macos-中安装-redis","link":"#在-macos-中安装-redis","children":[]},{"level":2,"title":"在 Windows 中安装 Redis","slug":"在-windows-中安装-redis","link":"#在-windows-中安装-redis","children":[]},{"level":2,"title":"在 Linux 中安装 Redis","slug":"在-linux-中安装-redis","link":"#在-linux-中安装-redis","children":[]},{"level":2,"title":"运行 Redis","slug":"运行-redis","link":"#运行-redis","children":[]},{"level":2,"title":"停止 Redis","slug":"停止-redis","link":"#停止-redis","children":[]},{"level":2,"title":"连接 Redis","slug":"连接-redis","link":"#连接-redis","children":[]}],"git":{"createdTime":1700614687000,"updatedTime":1700614687000,"contributors":[{"name":"GodX","email":"1046529973@qq.com","commits":1}]},"readingTime":{"minutes":3.85,"words":1155},"filePathRelative":"大前端/Nodejs全栈开发/Redis/02-安装.md","localizedDate":"2023年11月22日","excerpt":"<h2>关于 Redis 的版本</h2>\\n<p>Redis 借鉴了 Linux 操作系统对于版本号的命名规则：</p>\\n<ul>\\n<li>版本号第二位如果是奇数，则为非稳定版本（例如2.7、2.9、3.1）</li>\\n<li>如果是偶数，则为稳定版本（例如2.6、2.8、3.0、3.2）</li>\\n</ul>\\n<p>当前奇数版本就是下一个稳定版本的开发版本，例如 2.9 版本是 3.0 版本的开发版本。所以我们在生产环境通常选取偶数版本的Redis，如果对于某些新的特性想提前了解和使用，可以选择最新的奇数版本。</p>\\n<h2>获取 Redis 的方式</h2>\\n<p>获取 Redis 的方式有很多种：</p>","autoDesc":true}');export{x as comp,_ as data};
