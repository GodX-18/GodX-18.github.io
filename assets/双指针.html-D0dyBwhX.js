import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as p,c as u,d as s,w as a,b as n,e,a as d}from"./app-oXp7PBbS.js";const k={},m=d('<h2 id="什么是双指针法" tabindex="-1"><a class="header-anchor" href="#什么是双指针法"><span>什么是双指针法</span></a></h2><p>指的是在遍历对象的过程中，不是普通的使用单个指针进行访问，而是使用两个相同方向（<em>快慢指针</em>）或者相反方向（<em>对撞指针</em>）的指针进行扫描，从而达到相应的目的。</p><p>换言之，双指针法充分使用了数组有序这一特征，从而在某些情况下能够简化一些运算。</p><h2 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景"><span>应用场景</span></a></h2><p><strong>对撞指针</strong></p><ul><li>对撞数组适用于<strong>有序数组</strong>，也就是说当你遇到题目给定有序数组时，应该第一时间想到用对撞指针解题。</li></ul><p><strong>快慢指针</strong></p><ul><li>判断单链表是否存在环。</li><li>单链表是否存在环，如果存在，找到环入口。</li><li>在有序链表中寻找中位数。</li><li>输出链表中的倒数第K个节点 (即正数第length-K个节点)。</li><li>判断两个单链表是否相交，如果相交，找到他们的第一个公共节点。</li></ul><h2 id="算法流程" tabindex="-1"><a class="header-anchor" href="#算法流程"><span>算法流程</span></a></h2><p><strong>对撞指针</strong></p><p>对撞指针是指在有序数组中，将指向最左侧的索引定义为左指针(left)，最右侧的定义为右指针(right)，然后从两头向中间进行数组遍历。</p><p><strong>快慢指针</strong></p><p>两个指针从同一侧开始遍历数组，将这两个指针分别定义为<code>快指针（fast）</code>和<code>慢指针（slow）</code>，两个指针以不同的策略移动，直到两个指针的值相等（或其他特殊条件）为止，如fast每次增长两个，slow每次增长一个。</p><h2 id="算法模版" tabindex="-1"><a class="header-anchor" href="#算法模版"><span>算法模版</span></a></h2>',14),h=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"function"),e(),n("span",{class:"token function"},"fn"),e(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"list"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token keyword"},"var"),e(" left "),n("span",{class:"token operator"},"="),e(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),e(`
  `),n("span",{class:"token keyword"},"var"),e(" right "),n("span",{class:"token operator"},"="),e(" list"),n("span",{class:"token punctuation"},"."),e("length "),n("span",{class:"token operator"},"-"),e(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),e(`

  `),n("span",{class:"token comment"},"//遍历数组"),e(`
  `),n("span",{class:"token keyword"},"while"),e(),n("span",{class:"token punctuation"},"("),e("left "),n("span",{class:"token operator"},"<="),e(" right"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    left`),n("span",{class:"token operator"},"++"),n("span",{class:"token punctuation"},";"),e(`
    `),n("span",{class:"token comment"},"// 一些条件判断 和处理"),e(`
    `),n("span",{class:"token operator"},"..."),e(),n("span",{class:"token operator"},"..."),e(`
    right`),n("span",{class:"token operator"},"--"),n("span",{class:"token punctuation"},";"),e(`
  `),n("span",{class:"token punctuation"},"}"),e(`
`),n("span",{class:"token punctuation"},"}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("div",{class:"language-javascript line-numbers-mode","data-ext":"js","data-title":"js"},[n("pre",{class:"language-javascript"},[n("code",null,[n("span",{class:"token keyword"},"var"),e(),n("span",{class:"token function-variable function"},"hasCycle"),e(),n("span",{class:"token operator"},"="),e(),n("span",{class:"token keyword"},"function"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"head"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
  `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("head "),n("span",{class:"token operator"},"==="),e(),n("span",{class:"token keyword"},"null"),e(),n("span",{class:"token operator"},"||"),e(" head"),n("span",{class:"token punctuation"},"."),e("next "),n("span",{class:"token operator"},"==="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"return"),e(),n("span",{class:"token boolean"},"false"),e(`
  `),n("span",{class:"token punctuation"},"}"),e(`

  `),n("span",{class:"token keyword"},"let"),e(" slow "),n("span",{class:"token operator"},"="),e(` head
  `),n("span",{class:"token keyword"},"let"),e(" fast "),n("span",{class:"token operator"},"="),e(" head"),n("span",{class:"token punctuation"},"."),e(`next

  `),n("span",{class:"token keyword"},"while"),e(),n("span",{class:"token punctuation"},"("),e("slow "),n("span",{class:"token operator"},"!=="),e(" fast"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
    `),n("span",{class:"token keyword"},"if"),e(),n("span",{class:"token punctuation"},"("),e("fast "),n("span",{class:"token operator"},"==="),e(),n("span",{class:"token keyword"},"null"),e(),n("span",{class:"token operator"},"||"),e(" fast"),n("span",{class:"token punctuation"},"."),e("next "),n("span",{class:"token operator"},"==="),e(),n("span",{class:"token keyword"},"null"),n("span",{class:"token punctuation"},")"),e(),n("span",{class:"token punctuation"},"{"),e(`
      `),n("span",{class:"token keyword"},"return"),e(),n("span",{class:"token boolean"},"false"),e(`
    `),n("span",{class:"token punctuation"},"}"),e(`
    slow `),n("span",{class:"token operator"},"="),e(" slow"),n("span",{class:"token punctuation"},"."),e(`next
    fast `),n("span",{class:"token operator"},"="),e(" fast"),n("span",{class:"token punctuation"},"."),e("next"),n("span",{class:"token punctuation"},"."),e(`next
  `),n("span",{class:"token punctuation"},"}"),e(`
  `),n("span",{class:"token keyword"},"return"),e(),n("span",{class:"token boolean"},"true"),e(`
`),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},";"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),v=n("h2",{id:"经典题目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#经典题目"},[n("span",null,"经典题目")])],-1),g=n("p",null,[n("strong",null,"对撞指针")],-1),f={href:"https://leetcode.cn/problems/container-with-most-water/",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,[n("strong",null,"快慢指针")],-1),y={href:"https://leetcode.cn/problems/remove-duplicates-from-sorted-array/",target:"_blank",rel:"noopener noreferrer"},w=n("h2",{id:"参考链接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#参考链接"},[n("span",null,"参考链接")])],-1),E={href:"https://zhuanlan.zhihu.com/p/71643340",target:"_blank",rel:"noopener noreferrer"};function x(B,A){const r=c("CodeTabs"),t=c("ExternalLinkIcon");return p(),u("div",null,[m,s(r,{id:"70",data:[{id:"对撞指针"},{id:"快慢指针"}],"tab-id":"shell"},{title0:a(({value:o,isActive:l})=>[e("对撞指针")]),title1:a(({value:o,isActive:l})=>[e("快慢指针")]),tab0:a(({value:o,isActive:l})=>[h]),tab1:a(({value:o,isActive:l})=>[b]),_:1}),v,g,n("ul",null,[n("li",null,[n("a",f,[e("盛水最多的容器"),s(t)])])]),_,n("ul",null,[n("li",null,[n("a",y,[e("删除有序数组中的重复项"),s(t)])])]),w,n("ul",null,[n("li",null,[n("a",E,[e("算法一招鲜——双指针问题"),s(t)])])])])}const j=i(k,[["render",x],["__file","双指针.html.vue"]]),N=JSON.parse('{"path":"/%E7%AE%97%E6%B3%95/%E9%80%9A%E7%94%A8%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/%E5%8F%8C%E6%8C%87%E9%92%88.html","title":"双指针","lang":"zh-CN","frontmatter":{"title":"双指针","icon":"format","date":"2023-05-16T00:00:00.000Z","order":1,"category":["算法"],"tag":["双指针"],"description":"什么是双指针法 指的是在遍历对象的过程中，不是普通的使用单个指针进行访问，而是使用两个相同方向（快慢指针）或者相反方向（对撞指针）的指针进行扫描，从而达到相应的目的。 换言之，双指针法充分使用了数组有序这一特征，从而在某些情况下能够简化一些运算。 应用场景 对撞指针 对撞数组适用于有序数组，也就是说当你遇到题目给定有序数组时，应该第一时间想到用对撞指针...","head":[["meta",{"property":"og:url","content":"https://godx-18.github.io/%E7%AE%97%E6%B3%95/%E9%80%9A%E7%94%A8%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/%E5%8F%8C%E6%8C%87%E9%92%88.html"}],["meta",{"property":"og:site_name","content":"烜"}],["meta",{"property":"og:title","content":"双指针"}],["meta",{"property":"og:description","content":"什么是双指针法 指的是在遍历对象的过程中，不是普通的使用单个指针进行访问，而是使用两个相同方向（快慢指针）或者相反方向（对撞指针）的指针进行扫描，从而达到相应的目的。 换言之，双指针法充分使用了数组有序这一特征，从而在某些情况下能够简化一些运算。 应用场景 对撞指针 对撞数组适用于有序数组，也就是说当你遇到题目给定有序数组时，应该第一时间想到用对撞指针..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-22T06:04:23.000Z"}],["meta",{"property":"article:author","content":"GodX"}],["meta",{"property":"article:tag","content":"双指针"}],["meta",{"property":"article:published_time","content":"2023-05-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-22T06:04:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"双指针\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-16T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-22T06:04:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GodX\\",\\"url\\":\\"https://github.com/GodX-18\\"}]}"]]},"headers":[{"level":2,"title":"什么是双指针法","slug":"什么是双指针法","link":"#什么是双指针法","children":[]},{"level":2,"title":"应用场景","slug":"应用场景","link":"#应用场景","children":[]},{"level":2,"title":"算法流程","slug":"算法流程","link":"#算法流程","children":[]},{"level":2,"title":"算法模版","slug":"算法模版","link":"#算法模版","children":[]},{"level":2,"title":"经典题目","slug":"经典题目","link":"#经典题目","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1684735463000,"updatedTime":1684735463000,"contributors":[{"name":"GodX","email":"1046529973@qq.com","commits":1}]},"readingTime":{"minutes":1.86,"words":557},"filePathRelative":"算法/通用算法总结/双指针.md","localizedDate":"2023年5月16日","excerpt":"<h2>什么是双指针法</h2>\\n<p>指的是在遍历对象的过程中，不是普通的使用单个指针进行访问，而是使用两个相同方向（<em>快慢指针</em>）或者相反方向（<em>对撞指针</em>）的指针进行扫描，从而达到相应的目的。</p>\\n<p>换言之，双指针法充分使用了数组有序这一特征，从而在某些情况下能够简化一些运算。</p>\\n<h2>应用场景</h2>\\n<p><strong>对撞指针</strong></p>\\n<ul>\\n<li>对撞数组适用于<strong>有序数组</strong>，也就是说当你遇到题目给定有序数组时，应该第一时间想到用对撞指针解题。</li>\\n</ul>\\n<p><strong>快慢指针</strong></p>","autoDesc":true}');export{j as comp,N as data};
