import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as i,c as t,a as e}from"./app-oXp7PBbS.js";const n={},o=e('<h2 id="什么是前端工程化" tabindex="-1"><a class="header-anchor" href="#什么是前端工程化"><span>什么是前端工程化</span></a></h2><ul><li>前端工程本质上是软件工程的一种。</li><li>软件工程化关注的是<strong>性能、稳定性、可用性、可维护性等方面</strong>，注重<strong>基本的开发效率、运行效率的同时，思考维护效率</strong>。</li><li>一切以这些为目标的工作都是&quot;前端工程化&quot;。工程化是一种思想而不是某种技术。</li></ul><h2 id="前端工程化的意义" tabindex="-1"><a class="header-anchor" href="#前端工程化的意义"><span>前端工程化的意义</span></a></h2><p><strong>可以解决下列问题：</strong></p><ul><li>传统语言或语法的弊端 <ul><li>想要使用 ES6+ 新特性，但是兼容有问题</li><li>想要使用 Less / Sass / PostCSS 增强 CSS的编程性，但是运行环境不能直接支持</li></ul></li><li>无法使用模块化、组件化</li><li>重复的机械式工作 <ul><li>部署上线前需要手动压缩代码及资源文件</li><li>部署过程需要手动上传代码到服务器</li></ul></li><li>代码风格统一、质量保证</li><li>依赖后端服务接口支持</li><li>整体依赖后端项目</li></ul><h2 id="如何去做前端工程化" tabindex="-1"><a class="header-anchor" href="#如何去做前端工程化"><span>如何去做前端工程化</span></a></h2><h3 id="概览" tabindex="-1"><a class="header-anchor" href="#概览"><span>概览</span></a></h3><ol><li>创建项目 <ul><li>创建项目结构</li><li>创建特定类型文件</li></ul></li><li>编码 <ul><li>格式化代码</li><li>校验代码风格</li><li>编译、构建、打包</li></ul></li><li>预览/测试 <ul><li>Web Server / Mock</li><li>Live Reloading / HMR</li><li>Source Map</li></ul></li><li>提交 <ul><li>Git Hooks</li><li>Lint-staged</li><li>持续集成</li></ul></li><li>部署 <ul><li>CI / CD</li><li>自动发布</li></ul></li></ol>',8),a=[o];function r(s,c){return i(),t("div",null,a)}const h=l(n,[["render",r],["__file","基本介绍.html.vue"]]),u=JSON.parse('{"path":"/%E5%A4%A7%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%AE%9E%E6%88%98/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D.html","title":"基本介绍","lang":"zh-CN","frontmatter":{"title":"基本介绍","icon":"edit","date":"2022-09-28T00:00:00.000Z","order":1,"category":["前端"],"tag":["前端工程化"],"description":"什么是前端工程化 前端工程本质上是软件工程的一种。 软件工程化关注的是性能、稳定性、可用性、可维护性等方面，注重基本的开发效率、运行效率的同时，思考维护效率。 一切以这些为目标的工作都是\\"前端工程化\\"。工程化是一种思想而不是某种技术。 前端工程化的意义 可以解决下列问题： 传统语言或语法的弊端 想要使用 ES6+ 新特性，但是兼容有问题 想要使用 Le...","head":[["meta",{"property":"og:url","content":"https://godx-18.github.io/%E5%A4%A7%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%AE%9E%E6%88%98/%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D.html"}],["meta",{"property":"og:site_name","content":"烜"}],["meta",{"property":"og:title","content":"基本介绍"}],["meta",{"property":"og:description","content":"什么是前端工程化 前端工程本质上是软件工程的一种。 软件工程化关注的是性能、稳定性、可用性、可维护性等方面，注重基本的开发效率、运行效率的同时，思考维护效率。 一切以这些为目标的工作都是\\"前端工程化\\"。工程化是一种思想而不是某种技术。 前端工程化的意义 可以解决下列问题： 传统语言或语法的弊端 想要使用 ES6+ 新特性，但是兼容有问题 想要使用 Le..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-09T07:48:13.000Z"}],["meta",{"property":"article:author","content":"GodX"}],["meta",{"property":"article:tag","content":"前端工程化"}],["meta",{"property":"article:published_time","content":"2022-09-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-09T07:48:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"基本介绍\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-09-28T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-09T07:48:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GodX\\",\\"url\\":\\"https://github.com/GodX-18\\"}]}"]]},"headers":[{"level":2,"title":"什么是前端工程化","slug":"什么是前端工程化","link":"#什么是前端工程化","children":[]},{"level":2,"title":"前端工程化的意义","slug":"前端工程化的意义","link":"#前端工程化的意义","children":[]},{"level":2,"title":"如何去做前端工程化","slug":"如何去做前端工程化","link":"#如何去做前端工程化","children":[{"level":3,"title":"概览","slug":"概览","link":"#概览","children":[]}]}],"git":{"createdTime":1678348093000,"updatedTime":1678348093000,"contributors":[{"name":"GodX","email":"1046529973@qq.com","commits":1}]},"readingTime":{"minutes":1.2,"words":360},"filePathRelative":"大前端/前端工程化实战/基本介绍.md","localizedDate":"2022年9月28日","excerpt":"<h2>什么是前端工程化</h2>\\n<ul>\\n<li>前端工程本质上是软件工程的一种。</li>\\n<li>软件工程化关注的是<strong>性能、稳定性、可用性、可维护性等方面</strong>，注重<strong>基本的开发效率、运行效率的同时，思考维护效率</strong>。</li>\\n<li>一切以这些为目标的工作都是\\"前端工程化\\"。工程化是一种思想而不是某种技术。</li>\\n</ul>\\n<h2>前端工程化的意义</h2>\\n<p><strong>可以解决下列问题：</strong></p>\\n<ul>\\n<li>传统语言或语法的弊端\\n<ul>\\n<li>想要使用 ES6+ 新特性，但是兼容有问题</li>\\n<li>想要使用 Less / Sass / PostCSS 增强 CSS的编程性，但是运行环境不能直接支持</li>\\n</ul>\\n</li>\\n<li>无法使用模块化、组件化</li>\\n<li>重复的机械式工作\\n<ul>\\n<li>部署上线前需要手动压缩代码及资源文件</li>\\n<li>部署过程需要手动上传代码到服务器</li>\\n</ul>\\n</li>\\n<li>代码风格统一、质量保证</li>\\n<li>依赖后端服务接口支持</li>\\n<li>整体依赖后端项目</li>\\n</ul>","autoDesc":true}');export{h as comp,u as data};
