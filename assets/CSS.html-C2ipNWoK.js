import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as a,c as r,b as e,e as n,d as l,a as o}from"./app-oXp7PBbS.js";const c={},d=o('<h2 id="css-选择器及优先级" tabindex="-1"><a class="header-anchor" href="#css-选择器及优先级"><span>CSS 选择器及优先级</span></a></h2><h3 id="一、css选择器" tabindex="-1"><a class="header-anchor" href="#一、css选择器"><span>一、CSS选择器</span></a></h3><p>CSS选择器用于定位和选择HTML文档中的元素，从而对这些元素应用样式。</p><p><strong>常见的CSS选择器包括：</strong></p><ol><li><p><strong>标签选择器（Tag Selector）</strong></p><p>通过标签名选取元素，例如：<code>div{}</code>表示选取所有的div元素。</p></li><li><p><strong>类选择器（Class Selector）</strong></p><p>通过类名选取元素，例如：<code>.class{}</code>表示选取所有class属性为&quot; class &quot;的元素。</p></li><li><p><strong>id选择器（ID Selector）</strong></p><p>通过id选取元素，例如：<code>#id{}</code>表示选取id属性为&quot;id&quot;的元素。</p></li><li><p><strong>子元素选择器（Child Selector）</strong></p><p>选择某元素下的子元素，例如：<code>div&gt;p{}</code>表示选取所有在div元素内的p元素。</p></li><li><p><strong>后代元素选择器（Descendant Selector）</strong></p><p>选择某元素内的后代元素，例如：<code>div p{}</code>表示选取所有p元素，只要它们在div元素内部。</p></li><li><p><strong>相邻兄弟元素选择器（Adjacent Sibling Selector）</strong></p><p>选择紧挨着某个元素后的同级元素，例如：<code>h1 + p</code>表示选取紧接在h1元素后面的第一个p元素。</p></li><li><p><strong>通用选择器（Universal Selector）</strong></p><p>选取所有的元素，例如：<code>*{}</code>表示选取所有的元素。</p></li></ol><h3 id="二、css优先级" tabindex="-1"><a class="header-anchor" href="#二、css优先级"><span>二、CSS优先级</span></a></h3><p>CSS优先级指的是在样式定义冲突的情况下，浏览器根据一定规则来判断哪些样式具有更高的优先级，从而决定最终的样式。</p><p><strong>CSS优先级的计算规则：</strong></p><ol><li>如果样式使用了!important规则，则该样式具有最高优先级；</li><li>如果所有的样式都没有使用!important规则，则按照样式规则的特殊性（Specificity）计算；</li><li>如果特殊性相同，则按照样式规则的出现顺序决定。</li></ol><p><strong>特殊性的计算方法：</strong></p><p>下面列表中，选择器类型的优先级是递增的：</p>',11),h={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Type_selectors",target:"_blank",rel:"noopener noreferrer"},p=e("code",null,"h1",-1),g=e("code",null,"::before",-1),S={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Class_selectors",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,".example",-1),u=e("code",null,'[type="radio"]',-1),m=e("code",null,":hover",-1),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/ID_selectors",target:"_blank",rel:"noopener noreferrer"},C=e("code",null,"#example",-1),f=e("li",null,[n("给元素添加的"),e("strong",null,"内联样式"),n(" (例如，"),e("code",null,'style="font-weight:bold"'),n(") 总会覆盖外部样式表的任何样式，因此可看作是具有最高的优先级。")],-1),v=e("li",null,"!important",-1),x=e("p",null,"在样式规则冲突的情况下，特殊性越高的样式具有更高的优先级，即特殊性值越大的样式会覆盖特殊性值小的样式。如果特殊性相同，则后定义的样式会覆盖先定义的样式。",-1),k={class:"hint-container tip"},z=e("p",{class:"hint-container-title"},"提示",-1),y=e("p",null,[n("当在一个样式声明中使用一个 "),e("code",null,"!important"),n(" 规则时，此声明将覆盖任何其他声明。虽然，从技术上讲，"),e("code",null,"!important"),n(" 与优先级无关，但它与最终的结果直接相关。使用 "),e("code",null,"!important"),n(" 是一个"),e("strong",null,"坏习惯"),n("，应该尽量避免，因为这破坏了样式表中的固有的级联规则 使得调试找 bug 变得更加困难了。当两条相互冲突的带有 "),e("code",null,"!important"),n(" 规则的声明被应用到相同的元素上时，拥有更大优先级的声明将会被采用。")],-1),T=e("strong",null,"通配选择符",-1),N={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Universal_selectors",target:"_blank",rel:"noopener noreferrer"},D=e("code",null,"*",-1),W=e("strong",null,"关系选择符",-1),A={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Adjacent_sibling_combinator",target:"_blank",rel:"noopener noreferrer"},E=e("code",null,"+",-1),q={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Child_combinator",target:"_blank",rel:"noopener noreferrer"},I=e("code",null,">",-1),L={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/General_sibling_combinator",target:"_blank",rel:"noopener noreferrer"},Z=e("code",null,"~",-1),B={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Descendant_combinator",target:"_blank",rel:"noopener noreferrer"},G={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/Column_combinator",target:"_blank",rel:"noopener noreferrer"},M=e("code",null,"||",-1),j=e("strong",null,"否定伪类",-1),F={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/:not",target:"_blank",rel:"noopener noreferrer"},H=e("code",null,":not()",-1),V=e("code",null,":not()",-1),X=o('<h2 id="position-属性的值有哪些及其区别" tabindex="-1"><a class="header-anchor" href="#position-属性的值有哪些及其区别"><span>position 属性的值有哪些及其区别</span></a></h2><ul><li><code>static</code>：元素的默认值，不受定位影响，按照文档流正常排列。</li><li><code>relative</code>：相对定位，相对于元素原来所占据的位置进行偏移，不改变文档流布局，其偏移对其他元素位置无影响。</li><li><code>absolute</code>：绝对定位，相对于其最近的非 <code>static</code> 祖先元素绝对定位，如果没有这样的祖先元素，则相对于 <code>body</code>，不再占据文档流空间，其偏移对其他元素位置有影响。</li><li><code>fixed</code>：固定定位，相对于视口进行定位，即使页面滚动，其位置也不变，不占据文档流空间，其偏移对其他元素位置有影响。</li><li><code>sticky</code>：粘性定位，表现类似 <code>relative</code> 和 <code>fixed</code> 的混合形式，表示元素在跨越特定阈值前为相对定位，之后为固定定位。在兼容性方面存在一些问题。</li></ul><p>区别在于所占据的位置、是否改变文档流、偏移基准。</p><h2 id="bfc-块级格式化上下文" tabindex="-1"><a class="header-anchor" href="#bfc-块级格式化上下文"><span>BFC（块级格式化上下文）</span></a></h2><p>起到隔离样式的作用</p><h2 id="box-sizing-属性" tabindex="-1"><a class="header-anchor" href="#box-sizing-属性"><span>box-sizing 属性</span></a></h2><h2 id="盒子模型" tabindex="-1"><a class="header-anchor" href="#盒子模型"><span>盒子模型</span></a></h2><h2 id="怎么解决父元素高度塌陷" tabindex="-1"><a class="header-anchor" href="#怎么解决父元素高度塌陷"><span>怎么解决父元素高度塌陷</span></a></h2><h2 id="让一个元素水平垂直居中" tabindex="-1"><a class="header-anchor" href="#让一个元素水平垂直居中"><span>让一个元素水平垂直居中</span></a></h2><h2 id="隐藏页面中某个元素的方法" tabindex="-1"><a class="header-anchor" href="#隐藏页面中某个元素的方法"><span>隐藏页面中某个元素的方法</span></a></h2><h2 id="各种布局优缺点" tabindex="-1"><a class="header-anchor" href="#各种布局优缺点"><span>各种布局优缺点</span></a></h2><h2 id="清除浮动" tabindex="-1"><a class="header-anchor" href="#清除浮动"><span>清除浮动</span></a></h2><h2 id="伪类和伪元素" tabindex="-1"><a class="header-anchor" href="#伪类和伪元素"><span>伪类和伪元素</span></a></h2><h2 id="transition" tabindex="-1"><a class="header-anchor" href="#transition"><span>transition</span></a></h2><h2 id="css-的可继承性" tabindex="-1"><a class="header-anchor" href="#css-的可继承性"><span>CSS 的可继承性</span></a></h2><h2 id="css-预处理器" tabindex="-1"><a class="header-anchor" href="#css-预处理器"><span>CSS 预处理器</span></a></h2><h2 id="行内元素-块级元素-空元素" tabindex="-1"><a class="header-anchor" href="#行内元素-块级元素-空元素"><span>行内元素/块级元素/空元素</span></a></h2><h2 id="媒体查询" tabindex="-1"><a class="header-anchor" href="#媒体查询"><span>媒体查询</span></a></h2><h2 id="三角形" tabindex="-1"><a class="header-anchor" href="#三角形"><span>三角形</span></a></h2><h2 id="margin-纵向重叠问题" tabindex="-1"><a class="header-anchor" href="#margin-纵向重叠问题"><span>margin 纵向重叠问题</span></a></h2><h2 id="margin-负值问题" tabindex="-1"><a class="header-anchor" href="#margin-负值问题"><span>margin 负值问题</span></a></h2><h2 id="浮动布局-圣杯-双飞翼" tabindex="-1"><a class="header-anchor" href="#浮动布局-圣杯-双飞翼"><span>浮动布局（圣杯/双飞翼）</span></a></h2><h2 id="line-height-如何继承" tabindex="-1"><a class="header-anchor" href="#line-height-如何继承"><span>line-height 如何继承</span></a></h2><h2 id="css3有哪些新特性" tabindex="-1"><a class="header-anchor" href="#css3有哪些新特性"><span>CSS3有哪些新特性</span></a></h2>',24);function P(U,w){const t=i("ExternalLinkIcon");return a(),r("div",null,[d,e("ol",null,[e("li",null,[e("a",h,[n("类型选择器"),l(t)]),n("（例如，"),p,n("）和伪元素（例如，"),g,n("）")]),e("li",null,[e("a",S,[n("类选择器"),l(t)]),n(" (例如，"),_,n(")，属性选择器（例如，"),u,n("）和伪类（例如，"),m,n("）")]),e("li",null,[e("a",b,[n("ID 选择器"),l(t)]),n("（例如，"),C,n("）。")]),f,v]),x,e("div",k,[z,y,e("p",null,[T,n("（universal selector）（"),e("a",N,[D,l(t)]),n("）"),W,n("（combinators）（"),e("a",A,[E,l(t)]),n(", "),e("a",q,[I,l(t)]),n(", "),e("a",L,[Z,l(t)]),n(", "),e("a",B,[n('" "'),l(t)]),n(", "),e("a",G,[M,l(t)]),n("）和 "),j,n("（negation pseudo-class）（"),e("a",F,[H,l(t)]),n("）对优先级没有影响。（但是，在 "),V,n(" 内部声明的选择器会影响优先级）。")])]),X])}const R=s(c,[["render",P],["__file","CSS.html.vue"]]),K=JSON.parse('{"path":"/%E9%9D%A2%E8%AF%95/CSS.html","title":"CSS","lang":"zh-CN","frontmatter":{"title":"CSS","icon":"CSS","date":"2023-05-22T00:00:00.000Z","order":2,"category":["面试"],"tag":["CSS"],"description":"CSS 选择器及优先级 一、CSS选择器 CSS选择器用于定位和选择HTML文档中的元素，从而对这些元素应用样式。 常见的CSS选择器包括： 标签选择器（Tag Selector） 通过标签名选取元素，例如：div{}表示选取所有的div元素。 类选择器（Class Selector） 通过类名选取元素，例如：.class{}表示选取所有class属性...","head":[["meta",{"property":"og:url","content":"https://godx-18.github.io/%E9%9D%A2%E8%AF%95/CSS.html"}],["meta",{"property":"og:site_name","content":"烜"}],["meta",{"property":"og:title","content":"CSS"}],["meta",{"property":"og:description","content":"CSS 选择器及优先级 一、CSS选择器 CSS选择器用于定位和选择HTML文档中的元素，从而对这些元素应用样式。 常见的CSS选择器包括： 标签选择器（Tag Selector） 通过标签名选取元素，例如：div{}表示选取所有的div元素。 类选择器（Class Selector） 通过类名选取元素，例如：.class{}表示选取所有class属性..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-14T07:18:18.000Z"}],["meta",{"property":"article:author","content":"GodX"}],["meta",{"property":"article:tag","content":"CSS"}],["meta",{"property":"article:published_time","content":"2023-05-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-14T07:18:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-22T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-14T07:18:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GodX\\",\\"url\\":\\"https://github.com/GodX-18\\"}]}"]]},"headers":[{"level":2,"title":"CSS 选择器及优先级","slug":"css-选择器及优先级","link":"#css-选择器及优先级","children":[{"level":3,"title":"一、CSS选择器","slug":"一、css选择器","link":"#一、css选择器","children":[]},{"level":3,"title":"二、CSS优先级","slug":"二、css优先级","link":"#二、css优先级","children":[]}]},{"level":2,"title":"position 属性的值有哪些及其区别","slug":"position-属性的值有哪些及其区别","link":"#position-属性的值有哪些及其区别","children":[]},{"level":2,"title":"BFC（块级格式化上下文）","slug":"bfc-块级格式化上下文","link":"#bfc-块级格式化上下文","children":[]},{"level":2,"title":"box-sizing 属性","slug":"box-sizing-属性","link":"#box-sizing-属性","children":[]},{"level":2,"title":"盒子模型","slug":"盒子模型","link":"#盒子模型","children":[]},{"level":2,"title":"怎么解决父元素高度塌陷","slug":"怎么解决父元素高度塌陷","link":"#怎么解决父元素高度塌陷","children":[]},{"level":2,"title":"让一个元素水平垂直居中","slug":"让一个元素水平垂直居中","link":"#让一个元素水平垂直居中","children":[]},{"level":2,"title":"隐藏页面中某个元素的方法","slug":"隐藏页面中某个元素的方法","link":"#隐藏页面中某个元素的方法","children":[]},{"level":2,"title":"各种布局优缺点","slug":"各种布局优缺点","link":"#各种布局优缺点","children":[]},{"level":2,"title":"清除浮动","slug":"清除浮动","link":"#清除浮动","children":[]},{"level":2,"title":"伪类和伪元素","slug":"伪类和伪元素","link":"#伪类和伪元素","children":[]},{"level":2,"title":"transition","slug":"transition","link":"#transition","children":[]},{"level":2,"title":"CSS 的可继承性","slug":"css-的可继承性","link":"#css-的可继承性","children":[]},{"level":2,"title":"CSS 预处理器","slug":"css-预处理器","link":"#css-预处理器","children":[]},{"level":2,"title":"行内元素/块级元素/空元素","slug":"行内元素-块级元素-空元素","link":"#行内元素-块级元素-空元素","children":[]},{"level":2,"title":"媒体查询","slug":"媒体查询","link":"#媒体查询","children":[]},{"level":2,"title":"三角形","slug":"三角形","link":"#三角形","children":[]},{"level":2,"title":"margin 纵向重叠问题","slug":"margin-纵向重叠问题","link":"#margin-纵向重叠问题","children":[]},{"level":2,"title":"margin 负值问题","slug":"margin-负值问题","link":"#margin-负值问题","children":[]},{"level":2,"title":"浮动布局（圣杯/双飞翼）","slug":"浮动布局-圣杯-双飞翼","link":"#浮动布局-圣杯-双飞翼","children":[]},{"level":2,"title":"line-height 如何继承","slug":"line-height-如何继承","link":"#line-height-如何继承","children":[]},{"level":2,"title":"CSS3有哪些新特性","slug":"css3有哪些新特性","link":"#css3有哪些新特性","children":[]}],"git":{"createdTime":1684735463000,"updatedTime":1713079098000,"contributors":[{"name":"GodX","email":"1046529973@qq.com","commits":3}]},"readingTime":{"minutes":4.24,"words":1271},"filePathRelative":"面试/CSS.md","localizedDate":"2023年5月22日","excerpt":"<h2>CSS 选择器及优先级</h2>\\n<h3>一、CSS选择器</h3>\\n<p>CSS选择器用于定位和选择HTML文档中的元素，从而对这些元素应用样式。</p>\\n<p><strong>常见的CSS选择器包括：</strong></p>\\n<ol>\\n<li>\\n<p><strong>标签选择器（Tag Selector）</strong></p>\\n<p>通过标签名选取元素，例如：<code>div{}</code>表示选取所有的div元素。</p>\\n</li>\\n<li>\\n<p><strong>类选择器（Class Selector）</strong></p>\\n<p>通过类名选取元素，例如：<code>.class{}</code>表示选取所有class属性为\\" class \\"的元素。</p>\\n</li>\\n<li>\\n<p><strong>id选择器（ID Selector）</strong></p>\\n<p>通过id选取元素，例如：<code>#id{}</code>表示选取id属性为\\"id\\"的元素。</p>\\n</li>\\n<li>\\n<p><strong>子元素选择器（Child Selector）</strong></p>\\n<p>选择某元素下的子元素，例如：<code>div&gt;p{}</code>表示选取所有在div元素内的p元素。</p>\\n</li>\\n<li>\\n<p><strong>后代元素选择器（Descendant Selector）</strong></p>\\n<p>选择某元素内的后代元素，例如：<code>div p{}</code>表示选取所有p元素，只要它们在div元素内部。</p>\\n</li>\\n<li>\\n<p><strong>相邻兄弟元素选择器（Adjacent Sibling Selector）</strong></p>\\n<p>选择紧挨着某个元素后的同级元素，例如：<code>h1 + p</code>表示选取紧接在h1元素后面的第一个p元素。</p>\\n</li>\\n<li>\\n<p><strong>通用选择器（Universal Selector）</strong></p>\\n<p>选取所有的元素，例如：<code>*{}</code>表示选取所有的元素。</p>\\n</li>\\n</ol>","autoDesc":true}');export{R as comp,K as data};
